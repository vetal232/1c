{3,
{42,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,0,0,
{1,9f2e5ddb-3492-4f5d-8f0d-416b8d1d5c5b,"ПриСозданииНаСервере",1,0,9f2e5ddb-3492-4f5d-8f0d-416b8d1d5c5b,0,1},
{0},1,
{21,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0,0,3,3},0,"","",1,
{21,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{10,
{0},0,0,0,0,"NavigatorExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,"",0,0,0,0,0,0,3,3,0,0,0},"
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СтруктураВозврата = Новый Структура(""Результат, ТекстXML, СообщениеОшибки"", 1, """", """");
	
КонецПроцедуры

#КонецОбласти

#Область ПрограммныйИнтерфейс

&НаКлиенте
Функция Инициализировать(Знач АдресSOAP, Знач ЛогинSOAP, Знач ПарольSOAP, 
							Знач ПроксиИспользовать, Знач СерверПрокси, Знач ПортПрокси,
									Знач ЛогинПрокси, Знач ПарольПрокси) Экспорт

	Если ПустаяСтрока(АдресSOAP) Тогда
		
		СтруктураВозврата.Результат = 0;
		СтруктураВозврата.СообщениеОшибки = НСтр(""ru = 'Не указан адрес подключения.'"");
		Возврат СтруктураВозврата;
		
	ИначеЕсли ПустаяСтрока(ЛогинSOAP) 
		Или ПустаяСтрока(ПарольSOAP) Тогда
		
		СтруктураВозврата.Результат = 0;
		СтруктураВозврата.СообщениеОшибки = НСтр(""ru = 'Ошибка авторизации.'"");
		Возврат СтруктураВозврата;
		
	КонецЕсли;
	
	Адрес 				= АдресSOAP;
	Логин 				= ЛогинSOAP;
	Пароль 				= ПарольSOAP;
	ИспользоватьПрокси 	= ИспользоватьПрокси;
	ПроксиСервер 		= СерверПрокси;
	ПроксиПорт 			= ПортПрокси;
	ПроксиЛогин 		= ЛогинПрокси;
	ПроксиПароль 		= ПарольПрокси;
	
	Попытка
		ВыполнитьМетодRelationships();		
	Исключение
		СтруктураВозврата.СообщениеОшибки = НСтр(""ru = 'Ошибка обращения к Web-сервису.'"");
	КонецПопытки;
	
	Возврат СтруктураВозврата;
	
КонецФункции

&НаКлиенте
Функция ListMBex(Знач DocumentType, Знач PartnerILN = """", Знач DateFrom = Неопределено, 
					Знач DateTo = Неопределено, Знач ItemFrom = 1, Знач ItemTo = 4000) Экспорт
	
	Если ПустаяСтрока(DocumentType) Тогда
		
		СтруктураВозврата.Результат = 0;
		СтруктураВозврата.СообщениеОшибки = НСтр(""ru = 'Не указан вид документа для получения.'"");
		Возврат СтруктураВозврата;
		
	КонецЕсли;
	
	Если DateFrom = Неопределено Тогда
		DateFrom = ДобавитьМесяц(ТекущаяДата(), -2);
	КонецЕсли;
	
	Если DateTo = Неопределено Тогда
		DateTo = ДобавитьМесяц(ТекущаяДата(), 1);
	КонецЕсли;
	
	ВыполнитьМетодListMBex(DocumentType, PartnerILN, DateFrom, DateTo, Формат(ItemFrom, ""ЧГ=""), Формат(ItemTo, ""ЧГ=""));
	Возврат СтруктураВозврата;
	
КонецФункции

&НаКлиенте
Функция ReceiveBinary(Знач PartnerILN, Знач DocumentType, Знач TrackingID) Экспорт
	
	Если ПустаяСтрока(PartnerILN)
		Или ПустаяСтрока(DocumentType)
		Или ПустаяСтрока(TrackingID) Тогда
		
		СтруктураВозврата.Результат = 0;
		СтруктураВозврата.СообщениеОшибки = НСтр(""ru = 'Не корректно заполнены параметры получения документа.'"");
		Возврат СтруктураВозврата;
		
	КонецЕсли;	
	
	ВыполнитьМетодReceiveBinary(PartnerILN, DocumentType, TrackingID);
	Возврат СтруктураВозврата;
	
КонецФункции

&НаКлиенте
Функция SendBinary(Знач PartnerILN, Знач DocumentType, Знач FileName, Знач DataBase64) Экспорт
	
	Если ПустаяСтрока(PartnerILN)
		Или ПустаяСтрока(DocumentType)
		Или ПустаяСтрока(FileName)
		Или ПустаяСтрока(DataBase64) Тогда
		
		СтруктураВозврата.Результат = 0;
		СтруктураВозврата.СообщениеОшибки = НСтр(""ru = 'Не корректно заполнены параметры отправки документа.'"");
		Возврат СтруктураВозврата;
		
	КонецЕсли;
	
	ВыполнитьМетодSendBinary(PartnerILN, DocumentType, FileName, DataBase64);
	Возврат СтруктураВозврата;
	
КонецФункции

&НаКлиенте
Функция ChangeDocumentStatus(Знач TrackingID) Экспорт
	
	ВыполнитьМетодChangeDocumentStatus(TrackingID);
	Возврат СтруктураВозврата;
	
КонецФункции

&НаКлиенте
Функция OrganizationInfo(Знач ИНН = """") Экспорт
	
	ВыполнитьМетодOrganizationInfo(ИНН);
	Возврат СтруктураВозврата;
	
КонецФункции

&НаКлиенте
Функция Relationships() Экспорт
	
	ВыполнитьМетодRelationships();
	Возврат СтруктураВозврата;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПолучитьWSПрокси()
	
	Если Прав(Адрес, 5) <> ""?wsdl"" Тогда
		Адрес = Адрес + ""?wsdl"";
	КонецЕсли;
	
	Если ИспользоватьПрокси Тогда
		
		ИнтернетПрокси = Новый ИнтернетПрокси;
	    ИнтернетПрокси.Установить(""https"", ПроксиСервер, ПроксиПорт, ПроксиЛогин, ПроксиПароль);
	    ИнтернетПрокси.Установить(""http"", ПроксиСервер, ПроксиПорт, ПроксиЛогин, ПроксиПароль);
		
	Иначе
		ИнтернетПрокси = Неопределено;
	КонецЕсли;
	
	WSОпределение = Новый WSОпределения(Адрес, , , ИнтернетПрокси);
	Возврат Новый WSПрокси(WSОпределение, ""urn:wsedi"", ""EDIWebService"", ""EDIWebServicePort"");
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСтруктуруВозвратаИзОтвета(Ответ, ТекстОшибки)
	
	СтруктураВозврата.ТекстXML 			= Ответ.cnt;
	СтруктураВозврата.Результат 		= ?(Число(Ответ.res) > 0, Ложь, Истина);
	СтруктураВозврата.СообщениеОшибки 	= ?(Число(Ответ.res) > 0, ТекстОшибки, """");
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьМетодRelationships()

	Прокси 		= ПолучитьWSПрокси();
	ТекстОшибки = НСтр(""ru = 'Ошибка соединения с платформой.'"");
	Попытка
		
		Ответ = Прокси.relationships(Логин, Пароль, 1000);
		ЗаполнитьСтруктуруВозвратаИзОтвета(Ответ, ТекстОшибки);
		
	Исключение
		
		СтруктураВозврата.Результат 		= Ложь;
		СтруктураВозврата.СообщениеОшибки 	= ТекстОшибки;
		
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьМетодListMBex(DocumentType, PartnerILN, DateFrom, DateTo, ItemFrom, ItemTo)
	
	Прокси 	= ПолучитьWSПрокси();
	Попытка
		
		Ответ 	= Прокси.listMBEx(Логин, Пароль, PartnerILN, DocumentType, """", ""XML"", ""P"",
									Формат(DateFrom,""ДФ=yyyy-MM-dd; ДП=0000-00-00""),
									Формат(DateTo,""ДФ=yyyy-MM-dd; ДП=0000-00-00""),
									ItemFrom, ItemTo, ""N"", 3000);
		
		ЗаполнитьСтруктуруВозвратаИзОтвета(Ответ, НСтр(""ru = 'Ошибка получения списка документов с платформы.'""));
	
	Исключение
		
		СтруктураВозврата.Результат 		= Ложь;
		СтруктураВозврата.СообщениеОшибки 	= НСтр(""ru = 'Ошибка соединения с платформой.'"");
		
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьМетодReceiveBinary(PartnerILN, DocumentType, TrackingID)
	
	Прокси = ПолучитьWSПрокси();
	Попытка
		
		Ответ = Прокси.receiveBinary(Логин, Пароль, PartnerILN, DocumentType, TrackingID);
		
		Если Ответ <> Неопределено Тогда
			
			Структура = Новый Структура;
			Структура.Вставить(""Name"", Ответ.fileName);
			Структура.Вставить(""Data"", Ответ.fileData);
			
		КонецЕсли;
		
		СтруктураВозврата.ТекстXML 			= Структура;
		СтруктураВозврата.Результат 		= ?(Число(Ответ.res) > 0, 0, 1);
		СтруктураВозврата.СообщениеОшибки 	= ?(Число(Ответ.res) > 0, НСтр(""ru = 'Ошибка получения документа с платформы.'""), """");
		
	Исключение
		
		СтруктураВозврата.Результат 		= Ложь;
		СтруктураВозврата.СообщениеОшибки 	= НСтр(""ru = 'Ошибка соединения с платформой.'"");
		
	КонецПопытки;		

КонецПроцедуры

&НаСервере
Процедура ВыполнитьМетодSendBinary(PartnerILN, DocumentType, FileName, DataBase64)
	
	Прокси = ПолучитьWSПрокси();
	Попытка
		
		Ответ = Прокси.sendBinary(Логин, Пароль, PartnerILN, DocumentType, FileName, DataBase64);
		ЗаполнитьСтруктуруВозвратаИзОтвета(Ответ, НСтр(""ru = 'Ошибка отправки документа на платформу.'""));
		
	Исключение
		
		СтруктураВозврата.Результат 		= Ложь;
		СтруктураВозврата.СообщениеОшибки 	= НСтр(""ru = 'Ошибка соединения с платформой.'"");
		
	КонецПопытки;		
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьМетодChangeDocumentStatus(TrackingID)
	
	Прокси = ПолучитьWSПрокси();
	Попытка
		
		Ответ = Прокси.changeDocumentStatus(Логин, Пароль, TrackingID, ""R"");
		ЗаполнитьСтруктуруВозвратаИзОтвета(Ответ, НСтр(""ru = 'Ошибка чтения документа на платформы.'""));
		
	Исключение
		
		СтруктураВозврата.Результат 		= Ложь;
		СтруктураВозврата.СообщениеОшибки 	= НСтр(""ru = 'Ошибка соединения с платформой.'"");
		
	КонецПопытки;
	
КонецПроцедуры 

&НаСервере
Процедура ВыполнитьМетодOrganizationInfo(ИНН)
	
	Прокси = ПолучитьWSПрокси();
	Попытка
		
		Ответ = Прокси.organizationInfo(Логин, Пароль, ИНН, """", """", """");
		ЗаполнитьСтруктуруВозвратаИзОтвета(Ответ, НСтр(""ru = 'Ошибка получения ИНН с платформы.'""));
		
	Исключение
		
		СтруктураВозврата.Результат 		= Ложь;
		СтруктураВозврата.СообщениеОшибки 	= НСтр(""ru = 'Ошибка соединения с платформой.'"");
		
	КонецПопытки;				
	
КонецПроцедуры

#КонецОбласти
",
{4,9,
{9,
{1},0,"Адрес",
{1,1,
{"ru","Адрес"}
},
{"Pattern",
{"S",250,1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{2},0,"Логин",
{1,1,
{"ru","Логин"}
},
{"Pattern",
{"S",20,1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{3},0,"Пароль",
{1,1,
{"ru","Пароль"}
},
{"Pattern",
{"S",50,1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{4},0,"СтруктураВозврата",
{1,1,
{"ru","Структура возврата"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{5},0,"ИспользоватьПрокси",
{1,1,
{"ru","Использовать прокси"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{6},0,"ПроксиСервер",
{1,1,
{"ru","Прокси сервер"}
},
{"Pattern",
{"S",250,1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{7},0,"ПроксиПорт",
{1,1,
{"ru","Прокси порт"}
},
{"Pattern",
{"S",5,1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{8},0,"ПроксиЛогин",
{1,1,
{"ru","Прокси логин"}
},
{"Pattern",
{"S",50,1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{9},0,"ПроксиПароль",
{1,1,
{"ru","Прокси пароль"}
},
{"Pattern",
{"S",50,1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,0},
{0,0},
{0,0},
{0,0},0,0}