
#Область ПрограммныйИнтерфейс

&НаКлиенте
Функция ПолучитьСписокПартнеров(ТекстXML) Экспорт
	
	СписокПартнеров = Новый СписокЗначений;
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(ТекстXML);
		
	Пока ЧтениеXML.Прочитать() Цикл
		
		Если ЧтениеXML.Имя = "relation"
			И ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			
			ГЛНПартнера = "";
			ИмяПартнера = "";
			Пока ЧтениеXML.Прочитать() Цикл
				
				Если ЧтениеXML.Имя = "relation"
					И ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
					
					Если Не ПустаяСтрока(ГЛНПартнера)
						И СписокПартнеров.НайтиПоЗначению(ГЛНПартнера) = Неопределено Тогда
						
						СписокПартнеров.Добавить(ГЛНПартнера, ИмяПартнера);
						
					КонецЕсли;
					
					Прервать;
					
				КонецЕсли;
				
				Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда 
					
					Если ЧтениеXML.Имя = "partner-iln" Тогда
						
						ЧтениеXML.Прочитать();
						ГЛНПартнера = ЧтениеXML.Значение;
						
					ИначеЕсли ЧтениеXML.Имя = "partner-name" Тогда
						
						ЧтениеXML.Прочитать();
						ИмяПартнера = ЧтениеXML.Значение;
						
					КонецЕсли;
					
				КонецЕсли;
					
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СписокПартнеров;
			
КонецФункции

&НаКлиенте
Функция ПолучитьСтруктуруПартнера(ТекстXML) Экспорт
	
	СтруктураПартнера = Новый Структура("ГЛН, ФНСИД, ИНН, ПолноеНаименование, Наименование, Адрес, Город, ОГРН");
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(ТекстXML);
		
	Пока ЧтениеXML.Прочитать() Цикл	
		
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента 
			Или ЧтениеXML.ТипУзла = ТипУзлаXML.Текст Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		СвойствоСтруктуры = "";
		Если ЧтениеXML.Имя = "gln" Тогда
			СвойствоСтруктуры = "ГЛН";
		ИначеЕсли ЧтениеXML.Имя = "fnsId" Тогда
			СвойствоСтруктуры = "ФНСИД";
		ИначеЕсли ЧтениеXML.Имя = "inn" Тогда
			СвойствоСтруктуры = "ИНН";
		ИначеЕсли ЧтениеXML.Имя = "nameFull" Тогда
			СвойствоСтруктуры = "ПолноеНаименование";
		ИначеЕсли ЧтениеXML.Имя = "nameShort" Тогда
			СвойствоСтруктуры = "Наименование";
		ИначеЕсли ЧтениеXML.Имя = "address" Тогда
			СвойствоСтруктуры = "Адрес";
		ИначеЕсли ЧтениеXML.Имя = "city" Тогда
			СвойствоСтруктуры = "Город";
		ИначеЕсли ЧтениеXML.Имя = "ogrn" Тогда
			СвойствоСтруктуры = "ОГРН";
		КонецЕсли;
		
		Если Не ПустаяСтрока(СвойствоСтруктуры) Тогда
			
			ЧтениеXML.Прочитать();
			СтруктураПартнера[СвойствоСтруктуры] = ЧтениеXML.Значение;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СтруктураПартнера;
	
КонецФункции

&НаКлиенте
Функция ПолучитьМассивДокументов(ТекстXML) Экспорт
	
	МассивДокументов = Новый Массив;
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(ТекстXML);
	
	Пока ЧтениеXML.Прочитать() Цикл
		
		Если ЧтениеXML.Имя = "document-info"
			И ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			
			СтруктураДокумента = Новый Структура("ГЛНПартнера, ТрекНомер, НомерДокумента, ДатаДокумента");
			Пока ЧтениеXML.Прочитать() Цикл
				
				Если ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
					
					Если ЧтениеXML.Имя = "document-info" Тогда
						
						МассивДокументов.Добавить(СтруктураДокумента);
						Прервать;
						
					Иначе
						Продолжить;
					КонецЕсли;
					
				ИначеЕсли ЧтениеXML.ТипУзла = ТипУзлаXML.Текст Тогда
					Продолжить;
				КонецЕсли;
				
				Если ЧтениеXML.Имя = "partner-iln" Тогда
					СвойствоСтруктуры = "ГЛНПартнера";
				ИначеЕсли ЧтениеXML.Имя = "tracking-id" Тогда
					СвойствоСтруктуры = "ТрекНомер";
				ИначеЕсли ЧтениеXML.Имя = "document-number" Тогда
					СвойствоСтруктуры = "НомерДокумента";
				ИначеЕсли ЧтениеXML.Имя = "document-date" Тогда
					СвойствоСтруктуры = "ДатаДокумента";
				Иначе
					СвойствоСтруктуры = "";	
				КонецЕсли;	
				
				Если Не ПустаяСтрока(СвойствоСтруктуры) Тогда
					
					ЧтениеXML.Прочитать();
					СтруктураДокумента[СвойствоСтруктуры] = ?(СвойствоСтруктуры = "ДатаДокумента", ПреобразоватьДатуИзXML(ЧтениеXML.Значение), ЧтениеXML.Значение);
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ЧтениеXML.Закрыть();
	
	Возврат МассивДокументов;
	
КонецФункции

&НаКлиенте
Функция ПрочитатьРасширение(ТекстXML) Экспорт
	
	СтруктураРасширения = Новый Структура("Представление, ТребуемаяВерсия");
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(ТекстXML);
	
	МассивМетодов = Новый Массив;
	Пока ЧтениеXML.Прочитать() Цикл
		
		Если ЧтениеXML.Имя = "Description"
			И ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			
			СтруктураРасширения.Представление 	= ЧтениеXML.ПолучитьАтрибут("Name");
			СтруктураРасширения.ТребуемаяВерсия = XMLЗначение(Тип("Число"), ЧтениеXML.ПолучитьАтрибут("RecVersion"));
			
		ИначеЕсли ЧтениеXML.Имя = "Method"
			И ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			
			СтруктураМетода = Новый Структура("ИмяМетода, ТекстМетода", ЧтениеXML.ПолучитьАтрибут("Name"), ЧтениеXML.ПолучитьАтрибут("Text"));
			МассивМетодов.Добавить(СтруктураМетода);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если МассивМетодов.Количество() = 0 Тогда
		МассивМетодов.Добавить(Новый Структура("ИмяМетода, ТекстМетода", "", ""));
	КонецЕсли;
	
	СтруктураРасширения.Вставить("Методы", МассивМетодов);
	
	Возврат СтруктураРасширения;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПреобразоватьДатуИзXML(ДатаСтрокой)
	
	Возврат Дата(Число(Лев(ДатаСтрокой, 4)), Число(Сред(ДатаСтрокой, 6, 2)), Число(Прав(ДатаСтрокой, 2))); 
	
КонецФункции

#КонецОбласти
