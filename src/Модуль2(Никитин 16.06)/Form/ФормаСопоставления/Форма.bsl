
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры.СтруктураПараметров);
	
	Если Параметры.СтруктураПараметров.ТекущееСопоставление = "Организация" Тогда
		Заголовок = "Организация";
	ИначеЕсли Параметры.СтруктураПараметров.ТекущееСопоставление = "ТочкаДоставки" Тогда
		Заголовок = "Точка доставки";
	ИначеЕсли Параметры.СтруктураПараметров.ТекущееСопоставление = "Номенклатура" Тогда
		Заголовок = "Номенклатура";
	КонецЕсли;		
	
	Элементы.Код.Заголовок 		= Параметры.СтруктураПараметров.КодЗаголовок;
	Элементы.Значение.Заголовок = Параметры.СтруктураПараметров.ЗначениеЗаголовок;
		
	Элементы.Значение.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка." + Параметры.СтруктураПараметров.ОграничениеТипа);
	
	Элементы.FNSID.Видимость 		= Параметры.СтруктураПараметров.ТекущееСопоставление = "Организация"; 
	Элементы.КодРегиона.Видимость 	= Параметры.СтруктураПараметров.ТекущееСопоставление = "Организация";
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Оповещение = Новый ОписаниеОповещения("ЗакрытиеФормы", ЭтотОбъект, Новый Структура);
		ПоказатьВопрос(Оповещение, НСтр("ru = 'Данные были изменены. Сохранить изменения?'"), РежимДиалогаВопрос.ДаНет);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийРеквизитовФормы

&НаКлиенте
Процедура ЗначениеПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Значение)
		И ТекущееСопоставление = "Организация"
		И ПустаяСтрока(КодРегиона) Тогда
		
	    КодРегиона = Лев(ПолучитьРеквизит(Значение, "ИНН", ""), 2);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	Модифицированность = Ложь;
	Закрыть(СформироватьСтруктуруВозврата());
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗакрытиеФормы(Ответ, ДополнительныеПараметры) Экспорт
	
	Модифицированность = Ложь;
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Закрыть(СформироватьСтруктуруВозврата());
	Иначе
		Закрыть();
	КонецЕсли;		
	
КонецПроцедуры

&НаКлиенте
Функция СформироватьСтруктуруВозврата()
	
	СтруктураПараметров = Новый Структура("Код, Значение, ВидСопоставления");
	Если ТекущееСопоставление = "Организация" Тогда
		
		СтруктураПараметров.Вставить("FNSID");
		СтруктураПараметров.Вставить("КодРегиона");
		
	КонецЕсли;
	
	СтруктураПараметров.ВидСопоставления = ТекущееСопоставление;
	ЗаполнитьЗначенияСвойств(СтруктураПараметров, ЭтаФорма);
	
	Возврат СтруктураПараметров;

КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьРеквизит(Знач Ссылка, Знач ИмяРеквизита, Знач ЗначениеОшибки = Неопределено)
	
	Если Не ЗначениеЗаполнено(Ссылка) Тогда
		Возврат ЗначениеОшибки;
	КонецЕсли;
	
	Если Ссылка.Метаданные().Реквизиты.Найти(ИмяРеквизита) = Неопределено Тогда
		Возврат ЗначениеОшибки;
	Иначе
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Классификатор." + ИмяРеквизита + " КАК " + ИмяРеквизита + "
		|ИЗ
		|	Справочник." + Ссылка.Метаданные().Имя + " КАК Классификатор
		|ГДЕ
		|	Классификатор.Ссылка = &Ссылка";
		Запрос.УстановитьПараметр("Ссылка" , Ссылка);
		ВыборкаРеквизита = Запрос.Выполнить().Выбрать();
		
		Если ВыборкаРеквизита.Следующий() Тогда
			Возврат ВыборкаРеквизита[ИмяРеквизита];
		КонецЕсли;
		
	КонецЕсли;
	
КонецФункции

#КонецОбласти
