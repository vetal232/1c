&НаКлиенте
Перем РаботаСXML Экспорт;

#Область ПрограммныйИнтерфейс

&НаКлиенте
Функция Инициализировать(Знач эдиКаталогРасширений) Экспорт
	
	КаталогРасширений 		= эдиКаталогРасширений;	
	ВерсияМодуля 			= ПолучитьВерсиюМодуля();
	СоответствиеОбработок 	= Новый ФиксированнаяСтруктура;
	
	РаботаСXML = ЭтаФорма.ВладелецФормы.РаботаСXML;
	
КонецФункции

&НаКлиенте
Функция ПолучитьСписокРасширений() Экспорт
	
	МассивРасширений 			= Новый Массив;
	ФайлыВКаталогеРасширений 	= НайтиФайлы(КаталогРасширений, "*.ext");
	Для Каждого Файл Из ФайлыВКаталогеРасширений Цикл
		
		ТекстовыйДокумент = Новый ТекстовыйДокумент;
		ТекстовыйДокумент.Прочитать(Файл.ПолноеИмя);
		
		СтруктураРасширения = РаботаСXML.ПрочитатьРасширение(ТекстовыйДокумент.ПолучитьТекст());
		Для Каждого Метод Из СтруктураРасширения.Методы Цикл
			
			СтрокаРасширения = ТаблицаРасширений.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаРасширения, СтруктураРасширения);
			ЗаполнитьЗначенияСвойств(СтрокаРасширения, Метод);
			
			СтрокаРасширения.ИмяРасширения = Файл.Имя;
			
		КонецЦикла;
		
		СтруктураДляВозврата = Новый Структура("ИмяФайла, Наименование", Файл.Имя, СтруктураРасширения.Представление);
		МассивРасширений.Добавить(СтруктураДляВозврата);
		
	КонецЦикла;
	
	Возврат МассивРасширений;
	
КонецФункции

&НаКлиенте
Функция ПолучитьТекстМетодов(Знач ИмяМетода, Знач СписокПодключенныхРазрешений) Экспорт
	
	ТекстМетода 	= "";
	СтрокиТаблицы 	= ТаблицаРасширений.НайтиСтроки(Новый Структура("ИмяМетода", ИмяМетода));
	Для Каждого СтрокаМетода Из СтрокиТаблицы Цикл
		
		Если СписокПодключенныхРазрешений.НайтиПоЗначению(СтрокаМетода.ИмяРасширения) <> Неопределено Тогда
			ТекстМетода = ТекстМетода + ?(ПустаяСтрока(ТекстМетода), "", Символы.ПС) + СтрокаМетода.ТекстМетода;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ТекстМетода;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПолучитьВерсиюМодуля()
	
	Возврат РеквизитФормыВЗначение("Объект").ВерсияМодуля();
	
КонецФункции

#КонецОбласти
