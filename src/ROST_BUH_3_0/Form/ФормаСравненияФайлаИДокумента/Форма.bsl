
&НаКлиенте
Процедура ОтметитьВсё(Команда)
	Для Каждого СТрокаТаблицы Из Объект.ТаблицаСравненияФайлаИДокумента Цикл	
		СТрокаТаблицы.Флажок = Истина;	
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СнятьВыбор(Команда)
	Для Каждого СТрокаТаблицы Из Объект.ТаблицаСравненияФайлаИДокумента Цикл
		СТрокаТаблицы.Флажок = Ложь;	
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ВыполнитьНаСервере()	

	Документ = Объект.ИсправляемыйДокументRECADV.ПолучитьОбъект();
	Для Каждого СТрокаСравнения из Объект.ТаблицаСравненияФайлаИДокумента Цикл
		Если СТрокаСравнения.Флажок Тогда
			Если СТрокаСравнения.ЕстьВДокументе Тогда
				СтрокаДокумента = Документ.Товары.Найти(СТрокаСравнения.Номенклатура, "Номенклатура");
			Иначе
				СтрокаДокумента = Документ.Товары.Добавить();
			КонецЕсли;
			Если СТрокаСравнения.ЕстьВДокументе И СТрокаСравнения.ЕстьВФайле Тогда
				Если ИсправлятьНеТолькоЦенуНоИКоличество Тогда
					Если СтрокаСравнения.ЦенаВФайле <> СТрокаСравнения.ЦенаВДокументе Тогда
						СтрокаДокумента.Цена = СтрокаСравнения.ЦенаВФайле;
					КонецЕсли;
				КонецЕсли;
				Если СТрокаСравнения.КоличествоВДокументе <> СТрокаСравнения.КОличествоВФайле Тогда
					СтрокаДокумента.КОличество = СТрокаСравнения.КоличествоВФайле;
					Попытка СтрокаДокумента.КОличествоУпаковок = СТрокаСравнения.КоличествоВФайле; Исключение КонецПопытки;
				КонецЕсли;
				
			ИначеЕсли СТрокаСравнения.ЕстьВДокументе И (НЕ СТрокаСравнения.ЕстьВФайле) Тогда
				Документ.Товары.Удалить(СтрокаДокумента.НомерСтроки);
			ИначеЕсли СТрокаСравнения.ЕстьВФайле И (Не СТрокаСравнения.ЕстьВДокументе) Тогда
				СтрокаДокумента.Номенклатура = СТрокаСравнения.Номенклатура;
				СтрокаДокумента.Количество = СТрокаСравнения.КОличествоВФайле;
				Попытка СтрокаДокумента.КоличествоУпаковок = СТрокаСравнения.КОличествоВФайле; Исключение КонецПопытки;
				СтрокаДокумента.Цена = СТрокаСравнения.ЦенаВФайле;			
				Попытка
					Если Объект.Бухгалтерия Тогда
						EDI_ПриИзмененииНоменклатурыТоваров(СтрокаДокумента, Объект.ИсправляемыйДокументRECADV,,Объект.ИсправляемыйДокументRECADV.СуммаВключаетНДС);
					Иначе
						EDI_ПриИзмененииНоменклатурыТоваров(СтрокаДокумента, Объект.ИсправляемыйДокументRECADV,,Объект.ИсправляемыйДокументRECADV.ЦенаВключаетНДС);
					КонецЕсли;
				Исключение
					Попытка
						СтрокаДокумента.Упаковка = ПолучитьУпаковку(СтрокаДокумента.Номенклатура, СтрокаДокумента.Номенклатура.ЕдиницаИзмерения);
						Попытка
							Если СтрокаДокумента.Упаковка.Коэффициент > 1 Тогда
								СтрокаДокумента.КоличествоУпаковок = СтрокаДокумента.Количество/СтрокаДокумента.Упаковка.Коэффициент;
							Иначе
								СтрокаДокумента.КоличествоУпаковок = СтрокаДокумента.Количество;
							КонецЕсли;
						Исключение
						КонецПопытки;
						
					Исключение
					КонецПопытки;
				КонецПопытки;
			КонецЕсли;			
		КонецЕсли;
	КонецЦикла;
	Попытка
		Если Объект.Бухгалтерия Тогда
			EDI_ПриИзмененииНоменклатурыТоваров(СтрокаДокумента, Объект.ИсправляемыйДокументRECADV,,Объект.ИсправляемыйДокументRECADV.СуммаВключаетНДС);
		Иначе
			EDI_ПриИзмененииНоменклатурыТоваров(СтрокаДокумента, Объект.ИсправляемыйДокументRECADV,,Объект.ИсправляемыйДокументRECADV.ЦенаВключаетНДС);
		КонецЕсли;
		
	Исключение
		Сообщить("");
	КонецПопытки;
	Если Объект.Бухгалтерия = Ложь Тогда
		Если ТипЗНЧ(Документ) = Тип("ДокументОбъект.ЗаказПоставщику") Тогда
			Документ.Статус = Перечисления.СтатусыЗаказовПоставщикам.Согласован;
		КонецЕсли;
	КонецЕсли;
	Документ.Записать();	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ВосстановитьНастройки();//ИДСтроки = ИдСТрокиПередаваемое;
КонецПроцедуры

Процедура ВосстановитьНастройки()
	Объект.ИсправляемыйДокументRECADV = ХранилищеОбщихНастроек.Загрузить("ОбъектИсправляемыйДокументRECADV","КлючИсправляемыйДокументRECADV","ИсправляемыйДокументRECADV");
	Попытка		
		Объект.ТаблицаСравненияФайлаИДокумента.Загрузить(ХранилищеОбщихНастроек.Загрузить("ОбъектТаблицаСравненияФайлаИДокумента", "КлючТаблицаСравненияФайлаИДокумента","ТаблицаСравненияФайлаИДокумента"));
	Исключение
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьНажатие(Команда)
	ВыполнитьНаСервере();
	ЭтаФорма.Закрыть();
КонецПроцедуры

Функция ПолучитьУпаковку(Номенклатура, ЕдиницаИзмерения)
	
	Запрос = Новый Запрос;                                                                  
	Запрос.Текст = "ВЫБРАТЬ
	               |	УпаковкиНоменклатуры.Ссылка
	               |ИЗ
	               |	Справочник.УпаковкиНоменклатуры КАК УпаковкиНоменклатуры
	               |ГДЕ
	               |	УпаковкиНоменклатуры.Владелец.Ссылка = &Номенклатура
	               |	И УпаковкиНоменклатуры.ЕдиницаИзмерения.Ссылка = &ЕдиницаИзмерения";
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("ЕдиницаИзмерения", ЕдиницаИзмерения);
	Результат = Запрос.Выполнить().Выбрать();
	Если Результат.Следующий() Тогда
		Возврат Результат.Ссылка;
	Иначе
		СОобщить("Не удалось получить упаковку для номенклатуры " + Номенклатура + " с единицей измерения " + ЕдиницаИзмерения);
		Возврат Справочники.УпаковкиНоменклатуры.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции


Процедура EDI_ПриИзмененииНоменклатурыТоваров(СтрокаТабличнойЧасти, Документ, СтруктураЗависимыхРеквизитов = Неопределено, ЦенаВключаетНДС) Экспорт
	Попытка СуммаСтроки = СтрокаТабличнойЧасти.Цена * СтрокаТабличнойЧасти.Количество; Исключение КонецПопытки; 
	Попытка 
		СтрокаТабличнойЧасти.Упаковка = ПолучитьУпаковку(СтрокаТабличнойЧасти.Номенклатура, СтрокаТабличнойЧасти.Номенклатура.ЕдиницаИзмерения); 
		Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.Упаковка) Тогда
			СтрокаТабличнойЧасти.КоличествоУпаковок = СтрокаТабличнойЧасти.Количество/СтрокаТабличнойЧасти.Упаковка.Коэффициент;
		КонецЕсли;
	Исключение
	КонецПопытки;
	СтрокаТабличнойЧасти.СтавкаНДС = СтрокаТабличнойЧасти.Номенклатура.СтавкаНДС;
	СтавкаНДС = УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(СтрокаТабличнойЧасти.СтавкаНДС);
	//СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруПересчетаСуммыНДСВСтрокеТЧ(Документ);
	//
	//СтруктураДействий = Новый Структура;
	//СтруктураДействий.Вставить("ЗаполнитьЦенуПродажи", ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруЗаполненияЦеныВСтрокеТЧ(Документ));
	//СтруктураДействий.Вставить("ЗаполнитьСтавкуНДС", Документ.НалогообложениеНДС);
	//СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
	//СтруктураДействий.Вставить("ПересчитатьСуммуСНДС", СтруктураПересчетаСуммы);
	//СтруктураДействий.Вставить("ПересчитатьСумму");
	//	
	//ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(СтрокаТабличнойЧасти, СтруктураДействий,Неопределено);
	//ВФ(*)
			Если Объект.Бухгалтерия Тогда
				ТекстВыполнить = 
					"		ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуТабЧасти(СтрокаТабличнойЧасти, 1);		
					|		ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(СтрокаТабличнойЧасти, Документ.СуммаВключаетНДС);";
					//Для Каждого СтрокаТабличнойЧасти из Документ.Товары Цикл
						Попытка
							Выполнить(ТекстВыполнить);
						Исключение
						КонецПопытки;
					//КонецЦикла
			Иначе
				ТекстВыполнить = 
				"		СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруПересчетаСуммыНДСВСтрокеТЧ(Документ);
				|		СтруктураДействий = Новый Структура;
				|		СтруктураДействий.Вставить(""ЗаполнитьЦенуПродажи"", ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруЗаполненияЦеныВСтрокеТЧ(Документ));
				|		СтруктураДействий.Вставить(""ПересчитатьСуммуНДС"", СтруктураПересчетаСуммы);  
				|		СтруктураДействий.Вставить(""ПересчитатьСуммуСНДС"", СтруктураПересчетаСуммы);
				|		СтруктураДействий.Вставить(""ПересчитатьСумму"");
				|		СтруктураДействий.Вставить(""ПересчитатьСуммуСУчетомРучнойСкидки"", Новый Структура(""Очищать"", Ложь));
				|		СтруктураДействий.Вставить(""ПересчитатьСуммуСУчетомАвтоматическойСкидки"", Новый Структура(""Очищать"", Истина));		
				|		ОбработкаТабличнойЧастиВызовСервера.ОбработатьСтрокуТЧ(НоваяСтрока,СтруктураДействий, Неопределено);";
				Попытка
					Выполнить(ТекстВыполнить);
				Исключение
				КонецПопытки;
			КонецЕсли;
			//ВФ(**)
	СтрокаТабличнойЧасти.Сумма = СтрокаТабличнойЧасти.Количество*СтрокаТабличнойЧасти.Цена;
	СтрокаТабличнойЧасти.СуммаСНДС = ?(ЦенаВключаетНДС, СтрокаТабличнойЧасти.Сумма,СтрокаТабличнойЧасти.Сумма-СтрокаТабличнойЧасти.СуммаНДС);
		
	Попытка Документ.ЗаполнитьСчетаУчетаВСтрокеТабЧасти(СтрокаТабличнойЧасти, "Товары", Истина); Исключение КонецПопытки; 	
КонецПроцедуры


Функция ПолучитьТовар(BuyerItemCode, SupplierItemCode, EAN)
	Для Каждого СтрокаПоискаНоменклатуры Из Объект.СпособыПоискаНоменклатуры ЦИкл
		Номенклатура = Неопределено;
		МестоПОискаКонтрагента = СтрокаПоискаНоменклатуры.МестоПОиска;
		Тег = СтрокаПоискаНоменклатуры.ТегДляПоиска;
		Если Тег = "BuyerItemCode" Тогда
			Значение = BuyerItemCode;
		ИначеЕсли Тег = "SupplierItemCode" Тогда
			Значение = SupplierItemCode;
		ИначеЕсли Тег = "EAN" Тогда
			Значение = EAN;
		КонецЕсли;
		Поле = СтрокаПоискаНоменклатуры.ПолеДляПОиска;
		Если МестоПОискаКонтрагента = "По реквизиту" Тогда
			Номенклатура = Справочники.Номенклатура.НайтиПоРеквизиту(Поле,Значение);
		ИначеЕсли МестоПОискаКонтрагента = "По РС Дополнительные сведения" Тогда
			Если ЗначениеЗаполнено(Поле) Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
		               		|	ДополнительныеСведения.Объект
		               		|ИЗ
		               		|	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
		               		|ГДЕ
		               		|	ДополнительныеСведения.Свойство.Наименование = &наименование
		               		|	И (ДополнительныеСведения.Значение.Наименование = &значение
		               		|			ИЛИ ДополнительныеСведения.Значение = &значение)";
			Запрос.УстановитьПараметр("Наименование", Поле);
			Запрос.УстановитьПараметр("значение",  Значение);
			Результат = Запрос.Выполнить().Выбрать();
			Если Результат.Следующий() Тогда
				Номенклатура = Результат.Объект.Ссылка;
			КонецЕсли;
			Иначе
				Сообщить("Не указано наименование свойства для поиска номенклатуры");
			КонецЕсли;
		ИначеЕсли МестоПОискаКонтрагента = "По РС Штрихкоды" Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			               |	ШтрихкодыНоменклатуры.Номенклатура.Ссылка
			               |ИЗ
			               |	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
			               |ГДЕ
			               |	ШтрихкодыНоменклатуры.Штрихкод = &Значение";
			Запрос.УстановитьПараметр("Значение", Значение);
			РЕзультат = Запрос.Выполнить().Выбрать();
			Если Результат.Следующий() Тогда
				Номенклатура = Результат.НоменклатураСсылка;	
			КонецЕсли;			
		КонецЕсли;	
		Если ЗначениеЗаполнено(Номенклатура) Тогда
			Возврат Номенклатура;	
		КонецЕсли;
	КонецЦикла;	
	Сообщить("Номенклатура с кодопм покупателя " + BuyerItemCode + ", кодом поставщика " + SupplierItemCode + " и штрихкодом " + EAN + " не найдена.");
	ВОзврат Неопределено;
КонецФункции


Процедура ЗаписатьСвойствоОбъекта(Объект,ПСвойство, Значение)
	ОбъектОбработка = РеквизитФормыВЗначение("Объект");
	Результат = ОбъектОбработка.ЗаписатьСвойствоОбъекта(Объект,ПСвойство, Значение);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Попытка Объект.Бухгалтерия = Параметры.Бухгалтерия; Исключение КонецПопытки;
КонецПроцедуры
