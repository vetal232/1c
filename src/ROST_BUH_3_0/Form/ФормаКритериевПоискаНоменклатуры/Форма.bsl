
&НаКлиенте
Процедура МестоПоискаНоменклатурыПриИзменении(Элемент)
	Массив = Неопределено;
	Если МестоПоискаНоменклатуры = "1" Тогда
		ЭтаФорма.Элементы.НаборСвойствДляПоискаНоменклатуры.Видимость = Ложь;
		Массив = ПолучитьСписокРЕквизитовНоменклатуры();
	ИначеЕсли МестоПоискаНоменклатуры = "2" Тогда
		ЭтаФорма.Элементы.НаборСвойствДляПоискаНоменклатуры.Видимость = Ложь;
		Массив = ПолучитьСписокСвойств("Справочник.Номенклатура");		                     	
	ИначеЕсли МестоПоискаНоменклатуры = "3" Тогда
		ЭтаФорма.Элементы.НаборСвойствДляПоискаНоменклатуры.Видимость = Ложь;
		Массив = ПолучитьСписокПолейРегистраШтрихкоды();
	ИначеЕсли МестоПоискаНоменклатуры = "4" Тогда
		ЭтаФорма.Элементы.НаборСвойствДляПоискаНоменклатуры.Видимость = Ложь;
		Массив = Новый Массив;
		Массив.Добавить("КодПокупателя");
		Массив.Добавить("КодПоставщика");
		Массив.Добавить("Штрихкод");
	ИначеЕсли МестоПоискаНоменклатуры = "5" Тогда
		ЭтаФорма.Элементы.НаборСвойствДляПоискаНоменклатуры.Видимость = Ложь;
		Массив = ПолучитьСписокРеквизитовНоменклатурПоставщиков();
	ИначеЕсли МестоПоискаНоменклатуры = "6" Тогда
		ЭтаФорма.Элементы.НаборСвойствДляПоискаНоменклатуры.Видимость = Истина;		
	КонецЕсли;
	Если Массив <> Неопределено Тогда
		ЭтаФорма.Элементы.ПолеДляСравнения.СписокВыбора.ЗагрузитьЗначения(Массив);
	Иначе
		Если Не МестоПоискаНоменклатуры = "6" Тогда
			Сообщить("Не удалось получить список полей для сравнения.");	
		КонецЕсли;
	КонецЕсли;//ЭтаФорма.Элементы.ПолеДляСравнения.СписокВыбора.ЗагрузитьЗначения(Массив);
КонецПроцедуры

Функция ПолучитьСписокДополнительныхРеквизитовНоменклатуры(НаборСвойств)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДополнительныеРеквизитыИСведения.Наименование
	               |ИЗ
	               |	ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения";
	Если ЗначениеЗаполнено(НаборСвойств) Тогда
		Запрос.Текст = Запрос.Текст + "				   
	               |ГДЕ
	               |	ДополнительныеРеквизитыИСведения.НаборСвойств.Ссылка = &НаборСвойств";				
		Запрос.УстановитьПараметр("НаборСвойств",НаборСвойств);
	КонецЕсли;
	МассивДопРеквизитов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Наименование");
	Возврат МассивДопРеквизитов;
	
КонецФункции


Функция ПолучитьСписокРеквизитовНоменклатурПоставщиков()
	Возврат ПолучитьСписокПолейОбъектаМетаданныхОпределенногоТипа(Метаданные.Справочники.НоменклатураПоставщиков, Тип("Строка"));
КонецФункции

Функция ПолучитьСписокРЕквизитовНоменклатуры()
	Возврат ПолучитьСписокПолейОбъектаМетаданныхОпределенногоТипа(Метаданные.Справочники.Номенклатура, Тип("Строка"));
КонецФункции

Функция ПолучитьСписокПолейРегистраШтрихкоды()
	ВОзврат ПолучитьСписокПолейОбъектаМетаданныхОпределенногоТипа(Метаданные.РегистрыСведений.ШтрихкодыНоменклатуры, Тип("Строка"));
КонецФункции

Функция ПолучитьСписокПолейОбъектаМетаданныхОпределенногоТипа(МетаданныеОбъекта, ТипЗначенияПолей) Экспорт
	Список = Новый Массив;
	
	Попытка
		Для каждого Поле Из МетаданныеОбъекта.Измерения Цикл
			Если Поле.Тип.СодержитТип(ТипЗначенияПолей) Тогда
				Список.Добавить(Поле.Имя);
			КонецЕсли; 
		КонецЦикла; 
	Исключение
	КонецПопытки; 
	
	Попытка
		Для каждого Поле Из МетаданныеОбъекта.Ресурсы Цикл
			Если Поле.Тип.СодержитТип(ТипЗначенияПолей) Тогда
				Список.Добавить(Поле.Имя);
			КонецЕсли; 
		КонецЦикла; 
	Исключение
	КонецПопытки;
	
	Попытка
		Для каждого Поле Из МетаданныеОбъекта.Реквизиты Цикл
			Если Поле.Тип.СодержитТип(ТипЗначенияПолей) Тогда
				Список.Добавить(Поле.Имя);
			КонецЕсли; 
		КонецЦикла; 
	Исключение
	КонецПопытки;
	
	Попытка
		Для каждого Поле Из МетаданныеОбъекта.СтандартныеРеквизиты Цикл
			Если Поле.Тип.СодержитТип(ТипЗначенияПолей) Тогда
				Список.Добавить(Поле.Имя);
			КонецЕсли; 
		КонецЦикла; 
	Исключение
	КонецПопытки;
	
	//Список.СортироватьПоПредставлению();
	Возврат Список;
КонецФункции

Функция ПолучитьСписокСвойств(Тип)
	Запрос = Новый Запрос;                                                	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДополнительныеСведения.Свойство.Наименование КАК Наименование
	               |ИЗ
	               |	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
	               |ГДЕ
	               |	ТИПЗНАЧЕНИЯ(ДополнительныеСведения.Объект) = ТИП("+Тип+")";
	ТаблицаРезультат = Запрос.Выполнить().Выгрузить();	
	МассивСвойств = ТаблицаРезультат.ВыгрузитьКолонку("Наименование");	
КонецФункции
&НаКлиенте
Процедура Записать(Команда)
	//ДобавитьДанныеВМассив(МестоПоискаНоменклатуры,Тег,ПолеДляСравнения);
	ЭтаФОрма.Закрыть(ДобавитьДанныеВМассив(МестоПоискаНоменклатуры,Тег,ПолеДляСравнения));
	// Вставить содержимое обработчика.
КонецПроцедуры

Функция ДобавитьДанныеВМассив(МестоДляПОиска, Тег, Поле)
	
	Если ЗначениеЗаполнено(МестоДляПОиска) И ЗначениеЗаполнено(Тег) И ЗначениеЗаполнено(Поле) Тогда
		Массив = Новый Массив;
		Массив.Добавить(МестоДляПОиска);
		Массив.Добавить(Тег);
		Массив.Добавить(ПОле);		
		ВОзврат Массив;
	КонецЕсли;
	ВОзврат Неопределено;
КонецФункции
&НаКлиенте
Процедура Отмена(Команда)
	ЭтаФорма.Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПриОткрытииНаСервере();
	ЭтаФорма.Элементы.НаборСвойствДляПоискаНоменклатуры.Видимость = Ложь;
КонецПроцедуры

&НаСервере
Процедура ПриОткрытииНаСервере()
	ПутьКБД = ХранилищеОбщихНастроек.Загрузить("ОбъектПутьКВнешнейБД", "КлючПутьКВнешнейБД", ,"ПутьКВнешнейБД");
	Если ЗначениеЗаполнено(ПутьКБД) Тогда
		Объект.ПутьКВнешнейБД = ПутьКБД;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НаборСвойствДляПоискаНоменклатурыПриИзменении(Элемент)
	Массив = ПолучитьСписокДополнительныхРеквизитовНоменклатуры(Объект.НаборСвойствДляПоискаНоменклатуры);	
	Если Массив <> Неопределено Тогда
		ЭтаФорма.Элементы.ПолеДляСравнения.СписокВыбора.ЗагрузитьЗначения(Массив);	
	Иначе
		Сообщить("Не удалось получить список свойств для поиска номенклатуры по набору свойств: " + Объект.НаборСвойствДляПоискаНоменклатуры);
	КонецЕсли;
	
КонецПроцедуры
