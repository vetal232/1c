{3,
{42,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{3,3ccc650e-f631-4cae-8e33-3eaac610b5f9,"ПриОткрытии",9f2e5ddb-3492-4f5d-8f0d-416b8d1d5c5b,"ПриСозданииНаСервере",ca21cd18-35b2-4281-b5c8-016ecc8da8ac,"ПриЗакрытии",1,0,3ccc650e-f631-4cae-8e33-3eaac610b5f9,0,1,9f2e5ddb-3492-4f5d-8f0d-416b8d1d5c5b,0,1,ca21cd18-35b2-4281-b5c8-016ecc8da8ac,0,1},
{0},1,
{21,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,0},0,1,0,0,0,3,3},4,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"Документ",1,0,
{1,1,
{"ru","Документ"}
},
{1,0},
{2,
{1},
{0,b2bef5dd-4841-41c3-9686-325043bafebe}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{2,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДокументКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{3,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДокументРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{61,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"Группа1",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,1,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,1},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{55,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"КоличествоКоробокНаПалете",1,0,
{1,0},
{1,0},
{2,
{1},
{0,29951a6b-d3b0-41b9-a5ec-3f395f552cf3}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{56,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КоличествоКоробокНаПалетеКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{57,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КоличествоКоробокНаПалетеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{58,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ВсегоПаллет",1,0,
{1,0},
{1,0},
{1,
{5}
},
{0},1,1,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{59,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ВсегоПаллетКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{60,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ВсегоПаллетРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},1,0,1,
{10,
{62,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"Группа1РасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},143c00f7-a42d-4cd7-9189-88e4467dc768,
{50,
{21,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},"ТаблицаSSCC",0,0,1,
{1,0},
{1,0},
{1,
{3}
},0,1,0,0,0,1,1,0,0,0,0,0,1,0,1,1,0,1,2,2,1,1,0,0,0,1,2,0,0,1,1,
{0},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,1,1,13,
{"U"},
{1,2391e7b8-7235-45d7-ab7e-6ff3dc086396,"ТаблицаSSCCПередНачаломДобавления",1,0,2391e7b8-7235-45d7-ab7e-6ff3dc086396,0,1},
{0},1,
{21,
{22,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТаблицаSSCCКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{21,
{23,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ТаблицаSSCCКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,0},5,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{43,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ТаблицаSSCCДобавитьСтроку",
{1,0},1,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,1,
{0,977e831a-0e73-4d60-af51-091a6fa8612e},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{44,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаSSCCДобавитьСтрокуРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{53,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ТаблицаSSCCСкопировать",
{1,0},1,
{21,0ae4bea5-23be-42a7-b69e-97b11b29c453},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{54,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаSSCCСкопироватьРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{45,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ТаблицаSSCCУдалить",
{1,0},1,
{21,8d772f97-c0ef-47c0-9cb0-efea28c61341},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{46,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаSSCCУдалитьРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{63,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ТаблицаSSCCРаспределитьТоварыПоПаллетам",
{1,0},1,
{6,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{64,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаSSCCРаспределитьТоварыПоПаллетамРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{65,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ТаблицаSSCCПечатьSSCC",
{1,0},1,
{7,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{66,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаSSCCПечатьSSCCРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},1,0,0,0,3,3},3,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{34,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТаблицаSSCCКодSSCC",1,0,
{1,0},
{1,0},
{2,
{3},
{1}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{35,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТаблицаSSCCКодSSCCКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{36,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаSSCCКодSSCCРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{37,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТаблицаSSCCНоменклатура",1,0,
{1,0},
{1,0},
{2,
{3},
{2}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",1,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{1,1960479b-4d89-4eba-8b39-0aa802020558,"ТаблицаSSCCНоменклатураНачалоВыбора",1,0,1960479b-4d89-4eba-8b39-0aa802020558,0,1},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{38,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТаблицаSSCCНоменклатураКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{39,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаSSCCНоменклатураРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{40,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТаблицаSSCCКоличествоНаПалете",1,0,
{1,0},
{1,0},
{2,
{3},
{3}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ТаблицаSSCCКоличествоНаПалетеПриИзменении",1,0,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},1,
{21,
{41,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТаблицаSSCCКоличествоНаПалетеКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{42,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаSSCCКоличествоНаПалетеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},2,2,1,0,
{"Pattern"},"","",2,2,0,1,
{10,
{24,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаSSCCРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,0,0,1,
{4,
{25,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаSSCCСтрокаПоиска",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0},1,
{21,
{26,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТаблицаSSCCСтрокаПоискаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{10,
{27,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаSSCCСтрокаПоискаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},2,
{21,0},0,3,3},1,
{4,
{28,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,1,"ТаблицаSSCCСостояниеПросмотра",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{7,3,0,1,100},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},3,
{0,1,0},1,0,0},1,
{21,
{29,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТаблицаSSCCСостояниеПросмотраКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{10,
{30,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаSSCCСостояниеПросмотраРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},2,
{21,1},0,3,3},1,
{4,
{31,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ТаблицаSSCCУправлениеПоиском",
{1,0},
{1,0},1,1,0,1,
{1,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0,2},1,
{21,
{32,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТаблицаSSCCУправлениеПоискомКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{10,
{33,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаSSCCУправлениеПоискомРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},2,
{21,2},0,3,3},0,1,0,0,1,0,3,3,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{49,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"Подвал",
{1,1,
{"ru","Подвал"}
},
{1,1,
{"ru","Подвал"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,1,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,1},2,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{47,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},1,"ВыгрузитьДокумент",
{1,0},1,
{3,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{48,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ВыгрузитьДокументРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,1,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{51,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},1,"ЗакрытьФорму",
{1,0},1,
{4,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{52,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗакрытьФормуРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,1,0},1,0,1,
{10,
{50,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПодвалРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},"","",1,
{21,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{10,
{0},0,0,0,0,"NavigatorExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,"",0,0,0,0,0,0,3,3,0,0,0},"&НаКлиенте
Перем ЭДИ_ОбщиеИнструменты;
&НаКлиенте
Перем ЭДИ_РаботаСБазойДанных;
&НаКлиенте
Перем ПолучательБД_Подключен;

Процедура ВосттановитьЗначениеНастроек()
	ПутьКБД = ХранилищеОбщихНастроек.Загрузить(""ОбъектПутьКВнешнейБД"", ""КлючПутьКВнешнейБД"", ,""ПутьКВнешнейБД"");
	Если ЗначениеЗаполнено(ПутьКБД) Тогда
		Объект.ПутьКВнешнейБД = ПутьКБД;
	КонецЕсли;		
КонецПроцедуры

&НаКлиенте
Функция ПолучитьКодПаллета()
	
	Отбор = ЭДИ_РаботаСБазойДанных.ПолучитьПустуюЗапись();	
	ОрганизацияДляОТбора = ПолучитьОрганизацию(Объект.ИсправляемыйДокументRECADV);
	Отбор.Объект = ЗначениеВСтрокуВнутрСервер(ОрганизацияДляОТбора);
	Отбор.Тип = ""GLN""; 
	
	Запрос = ЭДИ_РаботаСБазойДанных.ПолучитьСвойство(Отбор);	
	
	СТруктураВОзврата = Новый СТруктура;
	
	Если Запрос.Результат=0 тогда
		
		Сообщить(""Не найдена организация"" + ОрганизацияДляОТбора + ""в базе данных"");
		Возврат Неопределено;
		
	Иначе
		ТекСвойствоОрганизации = Запрос.Содержимое;
		
		ЗапросКода = ЭДИ_РаботаСБазойДанных.ПолучитьКодПаллеты(ТекСвойствоОрганизации, 0);
	
		Если ЗапросКода.Результат=0 Тогда
			
			Сообщить(ЗапросКода.Сообщение);
			SSCC = """";
			
		Иначе			
			SSCC = ЗапросКода.Содержимое;			
		КонецЕСлИ;			
		
	КонецЕсли;
	
	Возврат SSCC;		

КонецФункции

Функция ЗначениеВСтрокуВнутрСервер(Значение)
	Возврат ЗначениеВСтрокуВнутр(Значение);
КонецФункции

Функция ПолучитьОрганизацию(Документ)		
	ДокументОбъект = Документ.ПолучитьОбъект();
	Возврат ДокументОбъект.Организация;
КонецФункции
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ВосстановитьНастройкиПодключения();
	ПолучитьОбщиеИнструменты();
	ВосстановитьНастройкиПриОткрытии();
	//ЭтаФорма.Элементы.ТаблицаSSCCНоменклатура.СписокВыбора.Очистить();
	//ЭтаФорма.Элементы.ТаблицаSSCCНоменклатура.СписокВыбора.ЗагрузитьЗначения(МассивНоменклатур);
	Объект.КоличествоКоробокНаПалете = 70;
	ПолучитьПалетныйЛист();
КонецПроцедуры


Процедура ВосстановитьНастройкиПодключения()
	Объект.ЭДИ_ИмяТаблицы = ХранилищеОбщихНастроек.Загрузить(""ОбъектЭДИ_ИмяТаблицы"", ""КлючЭДИ_ИмяТаблицы"", ""ЭДИ_ИмяТаблицы"");
	Объект.ЭДИ_КаталогВнешнейБазыДанных = ХранилищеОбщихНастроек.Загрузить(""ОбъектЭДИ_КаталогВнешнейБазыДанных"", ""КлючЭДИ_КаталогВнешнейБазыДанных"", ""ЭДИ_КаталогВнешнейБазыДанных"");
	Объект.ЭДИ_ПарольБД = ХранилищеОбщихНастроек.Загрузить(""ОбъектЭДИ_ПарольБД"", ""КлючЭДИ_ПарольБД"", ""ЭДИ_ПарольБД"");
	Объект.ЭДИ_ПользовательБД = ХранилищеОбщихНастроек.Загрузить(""ОбъектЭДИ_ПользовательБД"", ""КлючЭДИ_ПользовательБД"", ""ЭДИ_ПользовательБД"");
	Объект.ЭДИ_ПортБД = ХранилищеОбщихНастроек.Загрузить(""ОбъектЭДИ_ПортБД"", ""КлючЭДИ_ПортБД"",  ""ЭДИ_ПортБД"");
	Объект.ЭДИ_РежимРаботыБД = ХранилищеОбщихНастроек.Загрузить(""ОбъектЭДИ_РежимРаботыБД"", ""КлючЭДИ_РежимРаботыБД"",  ""ЭДИ_РежимРаботыБД"");
	Объект.ЭДИ_СерверБД = ХранилищеОбщихНастроек.Загрузить(""ОбъектЭДИ_СерверБД"", ""КлючЭДИ_СерверБД"",  ""ЭДИ_СерверБД"");	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьОбщиеИнструменты()
	ЭДИ_ОбщиеИнструменты = Новый COMОбъект(""EsTools1C.ExtTools"");
	ПодключитьсяКБДПриОткрытии();
КонецПроцедуры

&НаКлиенте
Процедура ПодключитьсяКБДПриОткрытии()
	ПолучательБД_Подключен=ложь;   
	ЭДИ_ПараметрSQLITE=0;
	
	Если Объект.ЭДИ_РежимРаботыБД = ""sqlite"" тогда 
		ЭДИ_ПараметрSQLITE = 0;
		ЭДИ_СтрокаПодключения = СокрЛП(Объект.ЭДИ_КаталогВнешнейБазыДанных);
	ИначеЕсли Объект.ЭДИ_РежимРаботыБД = ""MY"" тогда 
		ЭДИ_СтрокаПодключения = ""DRIVER={MySQL ODBC 5.3 ANSI Driver};Server=""+СокрЛП(Объект.ЭДИ_СерверБД)+"";Port=""+СокрЛП(Объект.ЭДИ_ПортБД)+"";Database=""+СокрЛП(Объект.ЭДИ_КаталогВнешнейБазыДанных)+"";User=""+СокрЛП(Объект.ЭДИ_ПользовательБД)+"";Password=""+СокрЛП(Объект.ЭДИ_ПарольБД)+"";"";  //MySQL
	ИначеЕсли Объект.ЭДИ_РежимРаботыБД = ""PG"" тогда  
		ЭДИ_СтрокаПодключения = ""DSN=PostgreSQL30;Server=""+СокрЛП(Объект.ЭДИ_СерверБД)+"";Port=""+СокрЛП(Объект.ЭДИ_ПортБД)+"";Database=""+СокрЛП(Объект.ЭДИ_КаталогВнешнейБазыДанных)+"";UID=""+СокрЛП(Объект.ЭДИ_ПользовательБД)+"";Pwd=""+СокрЛП(Объект.ЭДИ_ПарольБД)+"";"";   //PostgreSQL
	иначеЕсли Объект.ЭДИ_РежимРаботыБД = ""MSNC10"" тогда  
		ЭДИ_СтрокаПодключения = ""Driver={SQL Server Native Client 10.0};Server=""+СокрЛП(Объект.ЭДИ_СерверБД)+"";Database=""+СокрЛП(Объект.ЭДИ_КаталогВнешнейБазыДанных)+"";Uid=""+СокрЛП(Объект.ЭДИ_ПользовательБД)+"";Pwd=""+СокрЛП(Объект.ЭДИ_ПарольБД)+"";""
	иначеЕсли Объект.ЭДИ_РежимРаботыБД = ""MSNC11"" тогда  
		ЭДИ_СтрокаПодключения = ""Driver={SQL Server Native Client 11.0};Server=""+СокрЛП(Объект.ЭДИ_СерверБД)+"";Database=""+СокрЛП(Объект.ЭДИ_КаталогВнешнейБазыДанных)+"";Uid=""+СокрЛП(Объект.ЭДИ_ПользовательБД)+"";Pwd=""+СокрЛП(Объект.ЭДИ_ПарольБД)+"";""
	иначеЕсли Объект.ЭДИ_РежимРаботыБД = ""MSSSD"" тогда  
		ЭДИ_СтрокаПодключения = ""Driver={SQL Server};Server=""+СокрЛП(Объект.ЭДИ_СерверБД)+"";Database=""+СокрЛП(Объект.ЭДИ_КаталогВнешнейБазыДанных)+"";Uid=""+СокрЛП(Объект.ЭДИ_ПользовательБД)+"";Pwd=""+СокрЛП(Объект.ЭДИ_ПарольБД)+"";""
	КонецЕСлИ; 
	
	Если ЭДИ_СтрокаПодключения="""" тогда
		Предупреждение(""Нет настроек подключения к БД!"");
		Возврат;
	КонецеСли;

	ИмяТаблицыПолучатель = СокрЛП(Объект.ЭДИ_ИмяТаблицы);
	
	Попытка
		ЭДИ_РаботаСБазойДанных = ЭДИ_ОбщиеИнструменты.ПолучитьВнешнююБазуДанных(ЭДИ_СтрокаПодключения, Объект.ЭДИ_РежимРаботыБД, ЭДИ_ПараметрSQLITE, ИмяТаблицыПолучатель);
		Если ЭДИ_РаботаСБазойДанных.ЕстьОшибка=1 тогда
			ПолучательБД_Подключен = Ложь;
			Сообщить(""Ошибка подключение к базе данных по причине: "" + ЭДИ_РаботаСБазойДанных.СообщениеОшибки + "". Проверьте параметры подключения на странице настройки."");
		иначе	
			ПолучательБД_Подключен = Истина;			
		КонецЕСЛИ;
	исключение
		ПолучательБД_Подключен = Ложь;
		Сообщить(Описаниеошибки());
	Конецпопытки;
КонецПроцедуры


Функция ПолучитьТекущегоПользователя()
	Возврат ПараметрыСеанса.ТекущийПользователь;
КонецФункции

Функция ПолучитьТекущуюОрганизацию()
	Попытка
		Возврат ХранилищеОбщихНастроек.Загрузить(""ОбъектОрганизация"", ""КлючОрганизация"",""Организация"");	
	Исключение
		Возврат Справочники.Организации.ПустаяСсылка();
	КонецПопытки;
КонецФункции

&НаКлиенте
Процедура ВосстановитьНастройкиПриОткрытии()
			
	Организация = ПолучитьТекущуюОрганизацию();
	
	Если ЗначениеЗаполнено(Организация) Тогда
		Объект.Организация = Организация;
	Иначе
		Сообщить(""Не удалось получить текущую орагнизацию"");
		Возврат;
	КонецЕсли;

	
	ТекущийПользователь = ПолучитьТекущегоПользователя();
	ПользовательСтрока = ЗначениеВСтрокуВнутрСервер(ТекущийПользователь);
	Сообщить(""Получаем настройки для пользователя "" + ТекущийПользователь);
	
	Отбор = ЭДИ_РаботаСБазойДанных.ПолучитьПустуюЗапись();	
	Отбор.Объект = ПользовательСтрока;			
	Отбор.Владелец = ЗначениеВСтрокуВнутрСервер(Объект.Организация);
	Отбор.Тип = ""SETTINGS"";
	Запрос = ЭДИ_РаботаСБазойДанных.ПолучитьСписокСвойств(Отбор);	
	
	Если Запрос.Результат=0 тогда
		
		Сообщить(""Не удалось получить настройки для данного пользователя. Возможно, это первый случай использования данного модуля текущим пользователем. Ошибка 01"");//нет записей по заданному отбору
		Возврат;
		
	Иначе
		
		СписокДанных = Запрос.Содержимое;
		
		Для Сч=0 По СписокДанных.Верхнийиндекс() Цикл
			
			Свойство = СписокДанных.Получить(Сч);
			
			Попытка
				ВосстановитьНастройкиПриОткрытииСервер(Свойство.ДопАтрибуты);	
			Исключение
				СОобщить(ОписаниеОшибки());
			КонецПопытки;
			
			Продолжить;
			
		КонецЦикла; 
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВосстановитьНастройкиПриОткрытииСервер(СтруктураСтрока)
	СтруктураНастроек = ЗначениеИзСтрокиВнутрСервер(СтруктураСтрока);	
	Объект.EDI_Номенклатура_ЦенаИзФайла = СтруктураНастроек.EDI_Номенклатура_ЦенаИзФайла;
	Попытка		
		Объект.СпособыПоискаНоменклатуры.Загрузить(СтруктураНастроек.СпособыПоискаНоменклатуры);
	Исключение
		СОобщить(ОписаниеОшибки());
	КонецПопытки;
	
	Попытка
		Объект.ОтпечатокСеритфиката = СтруктураНастроек.ОтпечатокСеритфиката;
	Исключение
	КонецПопытки;	
	Попытка
	Объект.СертификатПоле = ЗначениеИзСтрокиВнутрСервер(СтруктураНастроек.СертификатПоле);
	Исключение
	КонецПопытки;		
	Объект.ИспользоватьSSCC = СтруктураНастроек.ИспользоватьSSCC;	
	Объект.Бухгалтерия = СтруктураНастроек.Бухгалтерия;
	Объект.УТАП = СтруктураНастроек.УТАП;
	Объект.УТ11 = СтруктураНастроек.УТ11;	
	Попытка	
		Объект.ВидКонтактнойИнформацииПоУмолчанию = СтруктураНастроек.ВидКонтактнойИнформацииПоУмолчанию;		
		Объект.СоглашениеПоУмолчанию = СтруктураНастроек.СоглашениеПоУмолчанию;
	Исключение		
	КонецПопытки;
	Объект.РежимОтладки = СтруктураНастроек.РежимОтладки;
	Объект.ВыгружатьDESADV = СтруктураНастроек.ВыгружатьDESADV;
	Объект.ВыборСервераEDISOAP = СтруктураНастроек.ВыборСервераEDISOAP;
	Объект.ВыгружатьFNS_ARCHIVE = СтруктураНастроек.ВыгружатьFNS_ARCHIVE;
	Объект.ВыгружатьINVOICE = СтруктураНастроек.ВыгружатьINVOICE;
	Объект.ВыгружатьINVOICEКОР = СтруктураНастроек.ВыгружатьINVOICEКОР;
	 Объект.ВыгружатьORDER = СтруктураНастроек.ВыгружатьORDER;
	Объект.ВыгружатьORDRSP = СтруктураНастроек.ВыгружатьORDRSP;
	Объект.ВыгружатьRECADV = СтруктураНастроек.ВыгружатьRECADV;
	Объект.ВыгружатьALCDES = СтруктураНастроек.ВыгружатьALCDES;
	Попытка
		Объект.ВыгружатьTORG12_SELLER = СтруктураНастроек.ВыгружатьTORG12_SELLER;
	Исключение
	КонецПопытки;
	Объект.ВыгружатьТолькоEDISoft = СтруктураНастроек.ВыгружатьТолькоEDISoft;
	Объект.RECADVИсправляетЦены = СтруктураНастроек.RECADVИсправляетЦены;	
	Объект.temp = СтруктураНастроек.temp;
	Объект.Должность = СтруктураНастроек.Должность;
	Объект.ЗагружатьDESADV = СтруктураНастроек.ЗагружатьDESADV;
	Объект.ЗагружатьFNS_ARCHIVE = СтруктураНастроек.ЗагружатьFNS_ARCHIVE;
	Объект.ЗагружатьINVOICE = 	СтруктураНастроек.ЗагружатьINVOICE;
	Объект.ЗагружатьINVOICEКОР = СтруктураНастроек.ЗагружатьINVOICEКОР;
	Объект.ЗагружатьORDER = СтруктураНастроек.ЗагружатьORDER;
	Объект.ЗагружатьORDRSP = СтруктураНастроек.ЗагружатьORDRSP;
	Объект.ЗагружатьRECADV = СтруктураНастроек.ЗагружатьRECADV;	
	Объект.Имя = СтруктураНастроек.Имя;
	Объект.Логин = СтруктураНастроек.Логин;
	Объект.Отчество = СтруктураНастроек.Отчество;
	Объект.Пароль = СтруктураНастроек.Пароль;
	Объект.ПарольККлючуСертификата = СтруктураНастроек.ПарольККлючуСертификата;
	Объект.ПроксиАдрес = СтруктураНастроек.ПроксиАдрес;
	Объект.ПроксиВключен = СтруктураНастроек.ПроксиВключен;
	Объект.ПроксиЗащищенЛогиномИПаролем = СтруктураНастроек.ПроксиЗащищенЛогиномИПаролем;
	Объект.ПроксиЛогин = СтруктураНастроек.ПроксиЛогин;
	Объект.ПроксиПароль = СтруктураНастроек.ПроксиПароль;
	Объект.ПроксиПорт = СтруктураНастроек.ПроксиПорт;
	Объект.СертификатПоле = СтруктураНастроек.СертификатПоле;	
	Объект.Фамилия = СтруктураНастроек.Фамилия;
	Объект.ТаймаутВебСервиса= СтруктураНастроек.ТаймаутВебСервиса;

КонецПроцедуры


&НаКлиенте
Процедура ПолучитьПалетныйЛист()
		
	Отбор = ЭДИ_РаботаСБазойДанных.ПолучитьПустуюЗапись();
	Отбор.Тип = ""DESADV_SSCC"";
	Отбор.Объект = ЗначениеВСтрокуВнутрСервер(Объект.ИсправляемыйДокументRECADV);	
	Запрос = ЭДИ_РаботаСБазойДанных.ПолучитьСвойство(Отбор);	
	Если Запрос.Результат=0 тогда
		Возврат;
	Иначе
		Свойство = Запрос.Содержимое;				
		СтруктураТаблицы = ЗначениеИзСтрокиВнутрСервер(Свойство.ДопАтрибуты);
		ЗаполнитьПаллетныйЛист(СтруктураТаблицы);
	КонецЕсли;

КонецПроцедуры
&НаКлиенте
Процедура ЗаполнитьПаллетныйЛист(структураТаблицы)
	КоличествоНоменклатур = структураТаблицы.Количество();
	Для Сч = 0 По КоличествоНоменклатур - 1 Цикл		
		КлючНоменклатуры = ""Стр"" + Строка(сч);
		Номенклатура = структураТаблицы[КлючНоменклатуры].Номенклатура;
		СтруктураSSCC = структураТаблицы[КлючНоменклатуры].СтруктураSSCC;
		КоличествоПаллет = СтруктураSSCC.Количество();
		Для СчПаллет = 0 По КоличествоПаллет - 1 Цикл
			КлючПаллет = ""Стр"" + Строка(СчПаллет);
			Паллет = СтруктураSSCC[КлючПаллет];
			НоваяСтрокаSSCC = ТаблицаSSCC.Добавить();
			НоваяСтрокаSSCC.КодSSCC = Паллет.КодSSCC;
			НоваяСтрокаSSCC.КоличествоНаПалете = Паллет.Количество;
			НоваяСтрокаSSCC.Номенклатура = Номенклатура;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

Функция ПолучитьСписокНоменклатурДокумента()
	
	ДокументОбъект = Объект.ИсправляемыйДокументRECADV;
	СтруктураНоменклатур = Новый Структура;		
	Сч = 0;
	
	Для Каждого СтрокаТ Из ДокументОбъект.Товары Цикл
		
		Ключ = ""Стр"" + Строка(Сч);
		СтруктураНоменклатура = Новый СТруктура;
		СтруктураНоменклатура.Вставить(""Номенклатура"",СтрокаТ.Номенклатура);
		КоличествоКоробок = ПересчитатьВКоличествоКоробок(СтрокаТ.Количество, СтрокаТ.Номенклатура);
		СтруктураНоменклатура.Вставить(""Количество"",КоличествоКоробок);
		СтруктураНоменклатур.Вставить(Ключ, СтруктураНоменклатура);
		Сч = Сч+1;
		
	КонецЦикла;
	
	Возврат СтруктураНоменклатур;
	
КонецФункции

Функция ПересчитатьВКоличествоКоробок(КоличествоШтук, Номенклатура)
	
	КоличествоВКоробке = Номенклатура.КоэффициентЕдиницыДляОтчетов;
	КоличествоКоробок = КоличествоШтук/КоличествоВКоробке;
	
	Возврат КоличествоКоробок;
	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)	
	
	Если Параметры.Свойство(""Документ"") И Параметры.Свойство(""ДопАтрибуты"") Тогда
		
		Объект.ИсправляемыйДокументRECADV = Параметры.Документ;		
		Объект.ДопАтрибутыЗаказа = Параметры.ДопАтрибуты;
		
	Иначе 
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ДобавитьСтроку(Команда)
	НоваяСтрока = ТаблицаSSCC.Добавить();
	КодSSCC = ПолучитьКодПаллета();
	НоваяСтрока.КодSSCC = КодSSCC;
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтроку(Команда)
	КоличествоВыделенныхСтрок = ЭтаФорма.Элементы.ТаблицаSSCC.ВыделенныеСтроки.Количество();
	Сч = 0;
	Если КоличествоВыделенныхСтрок>0 Тогда
		Для Сч = 0 По КоличествоВыделенныхСтрок-1 Цикл
			НомерТекущейСтроки = ЭтаФорма.Элементы.ТаблицаSSCC.ВыделенныеСтроки.Получить(Сч);
			ЭтаФорма.Элементы.ТаблицаSSCC.ВыделенныеСтроки.Удалить(НомерТекущейСтроки);
		КонецЦикла;	
	КонецЕсли;				

КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьДокумент(Команда)
	СохранитьПалетныйЛист();
	ЭтаФорма.Закрыть(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	Режим = РежимДиалогаВопрос.ДаНет;
	Текст = ""Сохранить палетный лист?"";
	Ответ = Вопрос(Текст, Режим,0,КодВозвратаДиалога.Да,""Сохранить?"", КодВозвратаДиалога.Да);
	Если Ответ = КодВозвратаДиалога.Да Тогда
		СохранитьПалетныйЛист();				
	КонецЕсли;	
	ЭтаФорма.Закрыть(Ложь);
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСтруктуруПаллетногоЛиста()
	СтруктураВозврата = Новый Структура;
	ИтоговаяСтруктура = Новый Структура;
	ТаблицаSSCC.Сортировать(""Номенклатура"");
	ПредНоменклатура = """";
	СтруктураSSCC = Новый Структура;
	СтруктураСтроки = Новый Структура;
	Сч = 0;
	СчSSCC = 0;
	Для Каждого СтрокаТаблицы Из ТаблицаSSCC Цикл
				
		Если СтрокаТаблицы.Номенклатура = ПредНоменклатура Тогда			
			Ключ = ""Стр"" + Строка(Сч);
			СтруктураСтроки = Новый Структура;
			СтруктураСтроки.Вставить(""КодSSCC"",СтрокаТаблицы.КодSSCC);					
			СтруктураСтроки.Вставить(""Количество"", СтрокаТаблицы.КоличествоНаПалете);
			СтруктураSSCC.Вставить(Ключ,СтруктураСтроки);
			Сч = Сч + 1;
		Иначе
			Если ЗначениеЗаполнено(СтруктураSSCC) Тогда
				КлючSSCc = ""Стр"" + Строка(СчSSCC);
				СтруктураВозврата = Новый Структура;
				СтруктураВозврата.Вставить(""Номенклатура"", ПредНоменклатура);
				СтруктураВозврата.Вставить(""СтруктураSSCC"", СтруктураSSCC);
				ИтоговаяСтруктура.Вставить(КлючSSCc,СтруктураВозврата);
				СчSSCC = СчSSCC + 1;
			КонецЕсли;
			Сч = 0;
			СтруктураSSCC = Новый Структура;
			СтруктураСтроки = Новый Структура;
			Ключ = ""Стр"" + Строка(Сч);
			СтруктураСтроки.Вставить(""КодSSCC"",СтрокаТаблицы.КодSSCC);					
			СтруктураСтроки.Вставить(""Количество"", СтрокаТаблицы.КоличествоНаПалете);
			СтруктураSSCC.Вставить(Ключ,СтруктураСтроки);
			Сч = Сч + 1;
		КонецЕсли;
		ПредНоменклатура = СтрокаТаблицы.Номенклатура;	                               
	КонецЦикла;
	Если ЗначениеЗаполнено(СтруктураSSCC) Тогда
		КлючSSCc = ""Стр"" + Строка(СчSSCC);
		СтруктураВозврата = Новый Структура;
		СтруктураВозврата.Вставить(""Номенклатура"", ПредНоменклатура);
		СтруктураВозврата.Вставить(""СтруктураSSCC"", СтруктураSSCC);
		ИтоговаяСтруктура.Вставить(КлючSSCc,СтруктураВозврата);
		СчSSCC = СчSSCC + 1;
	КонецЕсли;

	Возврат ИтоговаяСтруктура;
КонецФункции

&НаКлиенте
Процедура СохранитьПалетныйЛист()
			
	Тип = ""DESADV_SSCC"";
	
	СтруктураSSCC = ПолучитьСТруктуруПаллетногоЛиста();
	СтруктураСтрока = ЗначениеВСтрокуВнутрСервер(СтруктураSSCC);
		
	НоваяЗапись = ЭДИ_РаботаСБазойДанных.ПолучитьПустуюЗапись();
	НоваяЗапись.Объект = ЗначениеВСтрокуВнутрСервер(Объект.ИсправляемыйДокументRECADV);
	НоваяЗапись.Владелец = ЗначениеВСтрокуВнутрСервер(ПолучитьОрганизацию(Объект.ИсправляемыйДокументRECADV));;
	НоваяЗапись.ДопАтрибуты = СтруктураСтрока;
	НоваяЗапись.Дата = Формат(Число(ПреобразоватьДатуВСтроку(ТекущаяДата())),""ЧГ="");
	НоваяЗапись.Тип = Тип;
	Результат = ЭДИ_РаботаСБазойДанных.ЗаписатьСвойство(НоваяЗапись);
	
	Если Результат.Результат = 0 Тогда 
		Сообщить (""Не удалось записать палетный лист в бд по причине: "" + Символы.ПС + Результат.Сообщение);
	Иначе 		
	КонецЕсли;
	
КонецПроцедуры

Функция ЗначениеИзСтрокиВнутрСервер(Строка)
	Возврат ЗначениеИзСтрокиВнутр(Строка);
КонецФункции

Функция ПреобразоватьДатуВСтроку(ДатаДляПреобразования)
	Результат = Формат(Год(ДатаДляПреобразования),""ЧГ=0"") + ?(СтрДлина(Строка(Месяц(ДатаДляПреобразования))) < 2,""0"" + Строка(Месяц(ДатаДляПреобразования)) , Строка(Месяц(ДатаДляПреобразования)))
                + ?(СтрДлина(Строка(День(ДатаДляПреобразования))) < 2, ""0"" + Строка(День(ДатаДляПреобразования)), Строка(День(ДатаДляПреобразования)));
    Возврат Результат;	
КонецФункции

&НаКлиенте
Процедура ОчиститьТаблицу(Команда)
	ТаблицаSSCC.Очистить();
КонецПроцедуры

&НаКлиенте
Процедура РаспределитьТоварыПоПаллетам(Команда)
	СтруктураНоменклатур = ПолучитьСписокНоменклатурДокумента();
	РезультатРАспределенияСтруктура = РаспределитьТоварыПоПалетам(СтруктураНоменклатур, Объект.КоличествоКоробокНаПалете);
	ЗаполнитьТаблицуРаспределеннымиТоварами(РезультатРАспределенияСтруктура);
КонецПроцедуры
&НаКлиенте
Процедура ЗаполнитьТаблицуРаспределеннымиТоварами(РезультатРАспределенияСтруктура)
	
	ТаблицаSSCC.Очистить();
	
	КоличествоПалет = РезультатРАспределенияСтруктура.Количество();
	ВсегоПаллет = КоличествоПалет;
	Для Сч = 0 По КоличествоПалет-1 Цикл
		Ключ = ""Стр"" + Строка(сч);
		СтрокаР = РезультатРАспределенияСтруктура[Ключ];
		ТекSSCC = ПолучитьКодПаллета();
		Для СчSSCC = 0 По СтрокаР.Количество()-1 ЦИкл
			ТекКлюч = ""Стр"" + Строка(СчSSCC);			
			ТекСтрока = СтрокаР[ТекКлюч];
			НоваяСтрока = ТаблицаSSCC.Добавить();
			НоваяСтрока.КодSSCC = ТекSSCC;
			НоваяСтрока.КоличествоНаПалете = ТекСтрока.Количество;
			НоваяСтрока.Номенклатура = ТекСтрока.Номенклатура;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Функция ПеренестиСтруктуруВТаблицу(СтруктураНоменклатур)
	
	ТаблицаНоменклатур = Новый ТаблицаЗначений;
	ТаблицаНоменклатур.Колонки.Добавить(""Номенклатура"");
	ТаблицаНоменклатур.Колонки.Добавить(""Количество"");
	
	Для Сч = 0 По СтруктураНоменклатур.Количество()-1 Цикл
		НоваяСтрока = ТаблицаНоменклатур.Добавить();
		Ключ = ""Стр"" + Строка(Сч);
		СтруктураСтрока = СтруктураНоменклатур[Ключ];
		НоваяСтрока.Номенклатура = СтруктураСтрока.Номенклатура;
		НоваяСтрока.Количество = СтруктураСтрока.Количество;
	КонецЦикла;
	
	возврат ТаблицаНоменклатур;
	
КонецФункции

Функция РаспределитьТоварыПоПалетам(СтруктураНоменклатур, КоличНаПалете)
	
	ТаблицаНоменклатур = ПеренестиСтруктуруВТаблицу(СтруктураНоменклатур);	
	
	СтруктураПалет = Новый Структура;
	РаспределениеНеЗавершено = Истина;
	Сч = 0;	
	
	Пока РаспределениеНеЗавершено Цикл		
		
		ТаблицаНоменклатур.Сортировать(""Количество Убыв"");
		
		Для Каждого ТекСтрока Из ТаблицаНоменклатур Цикл
						
								
			Если ТекСтрока.Количество = КоличНаПалете Тогда
				
				СтрокаПалета = Новый Структура;
				НовКлюч = ""Стр"" + Строка(Сч);
				СтрокаМест = Новый Структура;
				СтрокаМест.Вставить(""Номенклатура"", ТекСтрока.Номенклатура);
				СтрокаМест.Вставить(""Количество"", ТекСтрока.Количество);
				СтрокаПалета.Вставить(""Стр0"", СтрокаМест);
				СтруктураПалет.Вставить(НовКлюч,СтрокаПалета);
				Сч = Сч+1;
				ТекСтрока.Количество = 0;
				Прервать;
				
			ИначеЕсли ТекСтрока.КОличество > КоличНаПалете Тогда
				
				СтрокаПалета = Новый Структура;
				НовКлюч = ""Стр"" + Строка(Сч);
				СтрокаМест = Новый Структура;
				СтрокаМест.Вставить(""Номенклатура"", ТекСтрока.Номенклатура);
				СтрокаМест.Вставить(""Количество"", КоличНаПалете);
				СтрокаПалета.Вставить(""Стр0"", СтрокаМест);
				СтруктураПалет.Вставить(НовКлюч,СтрокаПалета);
				Сч = Сч+1;
				ТекСтрока.Количество = ТекСтрока.Количество-КоличНаПалете;
				Прервать;
				
			ИначеЕсли (ТекСтрока.Количество < КоличНаПалете) И (ТекСтрока.Количество>0) Тогда				
				
				ТекКоличество = ТекСтрока.Количество;
				СтрокаПалета = Новый Структура;
				НовКлюч = ""Стр"" + Строка(Сч);
				Сч = Сч+1;
				СтрокаМест = Новый Структура;
				СтрокаМест.Вставить(""Номенклатура"", ТекСтрока.Номенклатура);
				СтрокаМест.Вставить(""Количество"", ТекСтрока.Количество);
				СтрокаПалета.Вставить(""Стр0"", СтрокаМест);								
				ТекСтрока.Количество = 0;
				НеХватает = КоличНаПалете - ТекКоличество;
				СтруктураОстатокРаспределения = ДобратьТовары(ТаблицаНоменклатур, НеХватает);
				СчТекДоб = 1;
				
				Для СчОст = 0 По СтруктураОстатокРаспределения.Количество() - 1 Цикл
					
					КлючТекДоб = ""Стр"" + Строка(счОст);
					СтруктураДоб = СтруктураОстатокРаспределения[КлючТекДоб];
					СтрокаМест = Новый Структура;
					СтрокаМест.Вставить(""Номенклатура"", СтруктураДоб.Номенклатура);
					СтрокаМест.Вставить(""Количество"", СтруктураДоб.Количество);
					НовКлючДоб = ""Стр"" + Строка(СчТекДоб);
					СтрокаПалета.Вставить(НовКлючДоб, СтрокаМест);
					СчТекДоб = СчТекДоб + 1;
					
				КонецЦикла;
				
				СтруктураПалет.Вставить(НовКлюч, СтрокаПалета);				
				Прервать;
				
			КонецЕсли;
			
		КонецЦикла;	
			
		ОстатковНет = ПроверитьОстатокКоробок(ТаблицаНоменклатур);
		
		Если ОстатковНет Тогда
			РаспределениеНеЗавершено = Ложь;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СтруктураПалет;
	
КонецФункции

Функция ДобратьТовары(ТаблицаТоваров, Нехватает)
	
	ТаблицаТоваров.Сортировать(""Количество Возр"");
	
	СтруктураВозврата = Новый Структура;
	
	ПодборОкончен = Ложь;
	
	Для Каждого СтрокаТ Из ТаблицаТоваров ЦИкл
		Если ПодборОкончен Тогда
			Продолжить
		КонецЕсли;
		Если СТрокаТ.Количество = Нехватает Тогда
			СтруктураДобор = Новый Структура;
			СтруктураДобор.Вставить(""Номенклатура"", СтрокаТ.Номенклатура);
			СтруктураДобор.Вставить(""Количество"", Нехватает);
			СтрокаТ.Количество = 0;
			ПодборОкончен = Истина;
			Ключ = ""Стр0"";
			СтруктураВозврата.Вставить(Ключ, СтруктураДобор);
		КонецЕсли;
		Если СтрокаТ.Количество > Нехватает Тогда
			СтруктураДобор = Новый Структура;
			СтруктураДобор.Вставить(""Номенклатура"", СтрокаТ.Номенклатура);
			СтруктураДобор.Вставить(""Количество"", Нехватает);
			ПодборОкончен = Истина;
			СтрокаТ.Количество = СтрокаТ.Количество - Нехватает;
			Ключ = ""Стр0"";
			СтруктураВозврата.Вставить(Ключ, СтруктураДобор);
		КонецЕсли;
		Если (СтрокаТ.Количество < НеХватает) И (СтрокаТ.Количество >0 ) Тогда
			Сч = 0;
			СтруктураДобор = Новый Структура;
			СтруктураДобор.Вставить(""Номенклатура"", СтрокаТ.Номенклатура);
			СтруктураДобор.Вставить(""Количество"", СтрокаТ.Количество);
			НеХватает = Нехватает - СтрокаТ.Количество;
			СтрокаТ.Количество = 0;			
			Ключ = ""Стр"" + Строка(Сч);
			СтруктураВозврата.Вставить(Ключ, СтруктураДобор);
			Если НеХватает <=0 Тогда
			Иначе
				СтруктураДоборЕщё = ДобратьТовары(ТаблицаТоваров, НеХватает);			
				Для СчДоб = 0 По СтруктураДоборЕщё.Количество()-1 Цикл
					ТекКлюч = ""Стр"" + Строка(СчДоб);
					ТекСтрДоб = СтруктураДоборЕщё[ТекКлюч];
					СтруктураДобор = Новый Структура;
					СтруктураДобор.Вставить(""Номенклатура"", ТекСтрДоб.Номенклатура);
					СтруктураДобор.Вставить(""Количество"", ТекСтрДоб.Количество);
					Сч = Сч+1;
					Ключ = ""Стр"" + Строка(Сч);
					СтруктураВозврата.Вставить(Ключ, СтруктураДобор);
				КонецЦикла;
			КонецЕсли;
			ПодборОкончен = Истина;
		КонецЕсли;
	КонецЦикла;
	Возврат СтруктураВозврата;
	
КонецФункции

Функция ПроверитьОстатокКоробок(ТаблицаТоваров)
	
	ОстатковНет = Истина;
	
	Для Каждого СтрокаТ Из ТаблицаТоваров ЦИкл		
		Если СтрокаТ.Количество > 0 Тогда
			ОстатковНет = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ОстатковНет;
КонецФункции

&НаКлиенте
Процедура ПриЗакрытии()
	Режим = РежимДиалогаВопрос.ДаНет;
	Текст = ""Сохранить палетный лист?"";
	Ответ = Вопрос(Текст, Режим,0,КодВозвратаДиалога.Да,""Сохранить?"", КодВозвратаДиалога.Да);
	Если Ответ = КодВозвратаДиалога.Да Тогда
		СохранитьПалетныйЛист();				
	КонецЕсли;
	Оповестить(,Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ПечатьSSCC(Команда)
	СтруктураПалет = СформироватьСтруктуруПалетДляПечати();
	ДанныеЗаказа = ПолучитьНомерЗаказа(Объект.ИсправляемыйДокументRECADV);
	ОрганизацияДокумента = ПолучитьОрганизацию(Объект.ИсправляемыйДокументRECADV);
	GLNОрганизации = ПолучитьGLNОрганизации(ОрганизацияДокумента, Ложь);	
	ТабДок = ПолучитьМакетПечать(""ПечатнаяФормаШтрихкод"", Объект.ИсправляемыйДокументRECADV,СтруктураПалет, ДанныеЗаказа,GLNОрганизации);
	ТабДок.Показать(""Палетный лист документа "" + Объект.ИсправляемыйДокументRECADV);
	
КонецПроцедуры

Функция ПолучитьМакет(ИмяМакета)
	Возврат РеквизитФормыВЗначение(""Объект"").ПолучитьМакет(ИмяМакета);
КонецФункции

Функция ПолучитьКоэффициентИВес(НоменклатураСС)
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить(""КоличествоВКоробке"",НоменклатураСС.КоэффициентЕдиницыДляОтчетов);
	Если НоменклатураСС.ВесИспользовать Тогда
		СтруктураВозврата.Вставить(""Вес1Шт"",НоменклатураСС.ВесЧИслитель);
	Иначе
		СтруктураВозврата.Вставить(""Вес1Шт"",1);
	КонецЕсли;
	Возврат СтруктураВозврата;
КонецФункции

&НаКлиенте
Функция СформироватьСтруктуруПалетДляПечати()
	ТаблицаSSCC.Сортировать(""КодSSCC"");
	СтруктураВозврата = Новый Структура;
	ПредКод = """";
	Сч = 0;	
	СтруктураТЧ = Неопределено;
	СтруктураПалет = Неопределено;
	СчСтр = 0;
	
	ПредПалета = Неопределено;
	ВесПалеты = 0;
	
	
	Для Каждого СтрокаТ Из ТаблицаSSCC ЦИкл		
		Если ПредКод = СТрокаТ.КодSSCC Тогда
			КлючСтроки = ""Стр"" + Строка(счСтр);
			СтруктураСтрока = Новый Структура;
			//
			КоэффициентИВес = ПолучитьКоэффициентИВес(СТрокаТ.Номенклатура);
			КоличествоВКоробке = КоэффициентИВес.КоличествоВКоробке;//СТрокаТ.Номенклатура.КоэффициентЕдиницыДляОтчетов;
			Коробок =  СТрокаТ.КоличествоНаПалете;
			КоличествоШтук = КоличествоВКоробке*Коробок;
			Вес1Шт = КоэффициентИВес.Вес1Шт;
			ВесНаПалете = КоличествоШтук*Вес1Шт;
			ВесПалеты = ВесПалеты+ВесНаПалете;
			//
			КодСап = ПолучитьКодТовара(""SupplierItemCode"",СТрокаТ.Номенклатура);
			СтруктураСтрока.Вставить(""Номенклатура"", СТрокаТ.Номенклатура);
			СтруктураСтрока.Вставить(""КодСап"", КодСап);
			СтруктураСтрока.Вставить(""Количество"", СТрокаТ.КоличествоНаПалете);
			СтруктураТЧ.Вставить(КлючСтроки, СТруктураСтрока);
			СчСтр = СчСтр +1;
		Иначе
			
			Если НЕ СтруктураПалет = Неопределено Тогда
				КлючПалет = ""Стр"" + Строка(сч);
				сч = сч +1;
				СтруктураПалет = Новый СТруктура;
				СтруктураПалет.Вставить(""КодSSCC"", ПредКод);
				СтруктураПалет.Вставить(""Товары"", СтруктураТЧ);
				СтруктураПалет.Вставить(""ВесПалеты"", ВесПалеты);
				СтруктураВозврата.Вставить(КлючПалет, СтруктураПалет);
			КонецЕсли;
			
			СтруктураПалет = Новый СТруктура;
			СчСтр = 0;
			ПредКод = СТрокаТ.КодSSCC;			
			СтруктураСтрока = Новый Структура;
			//
			ВесПалеты = 0;	
			КоэффициентИВес = ПолучитьКоэффициентИВес(СТрокаТ.Номенклатура);
			КоличествоВКоробке = КоэффициентИВес.КоличествоВКоробке;
			Коробок =  СТрокаТ.КоличествоНаПалете;
			КоличествоШтук = КоличествоВКоробке*Коробок;
			Вес1Шт = КоэффициентИВес.Вес1Шт;
			ВесНаПалете = КоличествоШтук*Вес1Шт;
			ВесПалеты = ВесПалеты+ВесНаПалете;
			//
			КодСап = ПолучитьКодТовара(""SupplierItemCode"",СТрокаТ.Номенклатура);
			СтруктураСтрока.Вставить(""Номенклатура"", СТрокаТ.Номенклатура);
			СтруктураСтрока.Вставить(""КодСап"", КодСап);
			СтруктураСтрока.Вставить(""Количество"", СТрокаТ.КоличествоНаПалете);
			СтруктураТЧ = Новый Структура;
			КлючСтроки = ""Стр"" + Строка(счСтр);
			СтруктураТЧ.Вставить(КлючСтроки, СтруктураСтрока);
			СчСтр = СчСтр + 1;
		КонецЕсли;
		
	КонецЦикла;
	
	КлючПалет = ""Стр"" + Строка(сч);
	сч = сч +1;
	СтруктураПалет = Новый СТруктура;
	СтруктураПалет.Вставить(""КодSSCC"", ПредКод);
	СтруктураПалет.Вставить(""Товары"", СтруктураТЧ);
	СтруктураПалет.Вставить(""ВесПалеты"", ВесПалеты);
	СтруктураВозврата.Вставить(КлючПалет, СтруктураПалет);
	
	Возврат СтруктураВозврата;
КонецФункции

&НаКлиенте
Функция ПолучитьКодТовара(НаимКод, Номенклатура)
	СтрокиСпособовПоиска = Объект.СпособыПоискаНоменклатуры.НайтиСтроки(Новый СТруктура(""ТегДляПоиска"", НаимКод));
	Для Каждого СТрокаПоискаНоменклатуры Из СтрокиСпособовПоиска Цикл
		МестоПОискаКонтрагента = СТрокаПоискаНоменклатуры.МестоПОиска;
		Если МестоПОискаКонтрагента = ""По реквизиту"" Тогда
			ЗначениеКода =  СокрЛП(ПолучитьДанныеИзРеквизитаОбъекта(Номенклатура,СТрокаПоискаНоменклатуры.ПолеДляПОиска));
			Если ЗначениеЗаполнено(ЗначениеКода) Тогда
				Возврат ЗначениеКода;
			КонецЕсли;
		ИначеЕсли МестоПОискаКонтрагента = ""По РС Дополнительные сведения"" Тогда
			ЗначениеКода =  СокрЛП(ПолучитьЗначениеСвойстваОбъектаДФормы(СТрокаПоискаНоменклатуры.ПолеДляПОиска,Номенклатура));
			Если ЗначениеЗаполнено(ЗначениеКода) Тогда
				Возврат ЗначениеКода;
			КонецЕсли;
		ИначеЕсли МестоПОискаКонтрагента = ""По РС Штрихкоды"" Тогда
			Штрихкод = ПолучитьШтрихкодНоменклатуры(Номенклатура,СТрокаПоискаНоменклатуры.ПолеДляПОиска);
			Если ЗначениеЗаполнено(Штрихкод) Тогда 
				Возврат Штрихкод
			КонецЕсли;
		ИначеЕсли МестоПОискаКонтрагента = ""Во внешней бд"" Тогда
			Возврат ПолучитьКодИзБД(Номенклатура, СТрокаПоискаНоменклатуры.ПолеДляПОиска);
		КонецЕсли;			
	КонецЦикла;
	Возврат Неопределено;
	
КонецФункции

&НаКлиенте
Функция ПолучитьКодИзБД(Номенклатура, Поле)
		
	Отбор = ЭДИ_РаботаСБазойДанных.ПолучитьПустуюЗапись();	
	Отбор.Объект = ЗначениеВСтрокуВнутрСервер(Номенклатура);
	Отбор.Тип = ""GOODSCODE"";
	Запрос = ЭДИ_РаботаСБазойДанных.ПолучитьСвойство(Отбор);	
	
	Если Запрос.Результат=0 тогда
		Сообщить(""Не удалось получить код "" + Поле + "" номенклатуры ""+Номенклатура+""! Документ не выгружен!"");
		Возврат Неопределено;
	Иначе
		Свойство = Запрос.Содержимое;
		Если Поле = ""КодПокупателя"" Тогда
			Код = Свойство.ИндексированныйАтрибут1;
		ИначеЕсли Поле = ""КодПоставщика"" Тогда
			Код = Свойство.ИндексированныйАтрибут2;
		ИначеЕсли Поле = ""Штрихкод"" Тогда
			Код = Свойство.ИндексированныйАтрибут3;
		КонецЕсли;
		
		Возврат Код;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьШтрихкодНоменклатуры(Номенклатура, ПолеДляПоиска)
	Запрос = Новый Запрос;
	Запрос.Текст = ""ВЫБРАТЬ
			       |	ШтрихкодыНоменклатуры.""+СокрЛП(ПолеДляПоиска)+"" КАК Штрихкод
			       |ИЗ
			       |	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
			       |ГДЕ
			       |	ШтрихкодыНоменклатуры.Номенклатура.Ссылка = &Владелец"";
	Запрос.УстановитьПараметр(""Владелец"",Номенклатура);
	результат = Запрос.Выполнить().Выбрать();
	Если Результат.Следующий() Тогда
		ВОзврат Результат.Штрихкод;
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция ПолучитьЗначениеСвойстваОбъектаДФормы(ПСвойство, ВладелецСвойства, ВыводитьСообщение=Ложь)
	//ОбъектОбработка.ИнициализироватьСвойствоОбъекта(ПСвойство,ВладелецСвойства,ВыводитьСообщение);
	//Результат = Неопределено;	
	ОбъектОбработка = РеквизитФормыВЗначение(""Объект"");
	Результат = ОбъектОбработка.ПолучитьЗначениеСвойстваОбъекта(ПСвойство, ВладелецСвойства, ВыводитьСообщение=Ложь);
	Возврат результат;
	
КонецФункции

Функция ПолучитьДанныеИзРеквизитаОбъекта(Объект,Путь) Экспорт
	ОбъектСсылка = Объект.Ссылка;
	Массив = Новый Массив;
	
	Номер = Найти(Путь,""."");
	Если Номер = 0 Тогда
		Массив.Добавить(Путь);
	КонецЕсли; 
	
	Пока Номер <> 0 Цикл
		Массив.Добавить(Лев(Путь,Номер-1));
		Путь = Сред(Путь,Номер+1);
		Номер = Найти(Путь,""."");
		Если Номер = 0 Тогда
			Массив.Добавить(Путь);
		КонецЕсли;
	КонецЦикла; 
	
	Для каждого Реквизит Из Массив Цикл
		ОбъектСсылка = ОбъектСсылка[Реквизит];
	КонецЦикла;  
	
	Возврат ОбъектСсылка;
КонецФункции

&НаКлиенте
Функция ПолучитьНомерЗаказа(Документ)
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить(""НомерЗаказа"");
	СтруктураВозврата.Вставить(""ЛогПоток"");
		
	Отбор = ЭДИ_РаботаСБазойДанных.ПолучитьПустуюЗапись();
	Отбор.Тип = ""DOC_ORDER"";
	ДокЗаказ = ПолучитьЗаказ(Документ);
	Отбор.Объект = ЗначениеВСтрокуВнутрСервер(ДокЗаказ);
	Запрос = ЭДИ_РаботаСБазойДанных.ПолучитьСвойство(Отбор);	
	
	Если Запрос.Результат=0 тогда
		Сообщить(""Не удалось получить номер входящего заказа: "" + ДокЗаказ);
		Возврат Неопределено;
	Иначе
		Свойство = Запрос.Содержимое;
		СтруктураВозврата.НомерЗаказа = Свойство.ИндексированныйАтрибут1;
		СтруктураФайла = ЗначениеИзСтрокиВнутрСервер(Свойство.ДопАтрибуты);
		Попытка
			ЛогПоток = СтруктураФайла.ЛогПоток;
		Исключение
			ЛогПоток = """";
		КонецПопытки;
		СтруктураВозврата.ЛогПоток = ЛогПоток;
		ВОзврат СтруктураВозврата;
	КонецЕсли;
КонецФункции

Функция ПолучитьЗаказ(Документ)
	Попытка
		Если Не ЗначениеЗаполнено(Документ.ДокументОснование) Тогда
			ВызватьИсключение(""Отсутствует ссылка на исходный заказ."");
		Иначе
			Заказ = Документ.ДокументОснование;
		КонецЕсли;		
	Исключение
		Попытка
			Если Не ЗначениеЗаполнено(Документ.ЗаказПокупателя) Тогда
				ВызватьИсключение(""Отсутствует ссылка на исходный заказ."");
			Иначе
				Заказ = Документ.ЗаказПокупателя;
			КонецЕсли;
		Исключение
			Если Не ЗначениеЗаполнено(Документ.ЗаказКлиента) Тогда
				ВызватьИсключение(""Отсутствует ссылка на исходный заказ."");
			Иначе
				Заказ = Документ.ЗаказКлиента;
			КонецЕсли;
		КонецПопытки;
	КонецПопытки;
	Возврат Заказ;
КонецФункции

Функция ПолучитьМакетПечать(ИмяМакета, Документ, СтруктураПалет,ДанныеЗаказа,GLNОрганизации)
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ПолеСверху=5;
 	ТабДок.ПолеСнизу=5;
 	ТабДок.ПолеСлева=10;
 	ТабДок.ПолеСправа=5;
 	ТабДок.ОриентацияСтраницы=ОриентацияСтраницы.Портрет;
 	ТабДок.ОтображатьСетку = ложь;
	ТабДок.АвтоМасштаб=Истина;
 	ТабДок.ОтображатьЗаголовки = ложь;
	ПечатьСодержимого = ПолучитьМакет(ИмяМакета);
	
	Для сч = 0 По СтруктураПалет.Количество()-1 Цикл		
		ТекПалетКлюч = ""Стр"" + Строка(сч);
		ТекПалет = СтруктураПалет[ТекПалетКлюч];
		
		ПараметрыШтрихкода = Новый Структура(""Ширина, Высота, ТипКода, ОтображатьТекст, РазмерШрифта, Штрихкод"", 350, 70, 4, Истина, 12, ТекПалет.КодSSCC);
		КартинкаШК = МенеджерОборудованияВызовСервера.ПолучитьКартинкуШтрихкода(ПараметрыШтрихкода);

		ОбластьШтрихкода = ПечатьСодержимого.ПолучитьОбласть(""ОбластьШтрихкода"");
		ОбластьШтрихкода.Рисунки.EDI_ШК.Картинка = КартинкаШК;
		
		ТабДок.Вывести(ОбластьШтрихкода);
		
		///
		
		ОбластьИнфОбОтпр = ПечатьСодержимого.ПолучитьОбласть(""ИнформацияОбОтправлении"");
		ОбластьИнфОбОтпр.Параметры.КодSSCC = ТекПалет.КодSSCC;
		ОбластьИнфОбОтпр.Параметры.Вес = ТекПалет.ВесПалеты;
		ОбластьИнфОбОтпр.Параметры.ДатаПоставки = Формат(Документ.Дата+86400,""ДФ=dd.MM.yyyy"");
		ОбластьИнфОбОтпр.Параметры.ДатаОтгрузки = Формат(Документ.Дата,""ДФ=dd.MM.yyyy"");
		ТабДок.Вывести(ОбластьИнфОбОтпр);
		
		ОбластьМестоПоставки = ПечатьСодержимого.ПолучитьОбласть(""МестоПоставки"");
		ОбластьМестоПоставки.Параметры.НомерЗаказа = ДанныеЗаказа.НомерЗаказа;//""НомерЗаказа"";
		ОбластьМестоПоставки.Параметры.НомерМагазина = ПолучитьНомерМагазинаКонтрагента(Документ);
		Если Не ЗначениеЗаполнено(Документ.Грузополучатель) Тогда
			ОбластьМестоПоставки.Параметры.НазваниеМагазина = Документ.Контрагент.Наименование;//Документ.АдресДоставки;
		Иначе
			ОбластьМестоПоставки.Параметры.НазваниеМагазина = Документ.Грузополучатель.Наименование;//Документ.АдресДоставки;
		КонецЕсли;
		Попытка
			ОбластьМестоПоставки.Параметры.ЛогистическийПоток = ДанныеЗаказа.ЛогПоток;// ""ЛогПотог"";//ДанныеЗаказа.ЛогПоток;//Документ.Контрагент.КонтактнаяИнформация[0].Представление;
		Исключение
			Сообщить(""Не удалось получить логистический поток."");
			Возврат Неопределено;
		КонецПопытки;
		ОбластьМестоПоставки.Параметры.АдресПоставки = Документ.Контрагент.КонтактнаяИнформация[0].Представление;//АдресДоставки;//Документ.Номер;
		СтруктураЗаказа = ЗначениеИзСтрокиВнутрСервер(Объект.ДопАтрибутыЗаказа);
		ОбластьМестоПоставки.Параметры.РаспредЦентр = СтруктураЗаказа.ТочкаДоставкиИмя;//Документ.Контрагент.КонтактнаяИнформация[0].Представление;
		
		ТабДок.Вывести(ОбластьМестоПоставки);
						
		ОбластьИнформацияОПоставщике = ПечатьСодержимого.ПолучитьОбласть(""ИнформацияОПоставщике"");
		ОбластьИнформацияОПоставщике.Параметры.GLN = GLNОрганизации;//
		ОбластьИнформацияОПоставщике.Параметры.НазваниеПоставщика = Документ.Организация.НаименованиеПолное;
		ТабДок.Вывести(ОбластьИнформацияОПоставщике);
	//	ОбластьШапкаТаблицы = ПечатьСодержимого.ПолучитьОбласть(""ШапкаТаблицы"");
	//	ТабДок.Вывести(ОбластьШапкаТаблицы);
	//
	//	Для СчТов = 0 По ТекПалет.Товары.Количество()-1 Цикл
	//		КлючСтрока = ""Стр"" + Строка(СчТов);
	//		ТекСтрока = ТекПалет.Товары[КлючСтрока];
	//		ОбластьСтрока = ПечатьСодержимого.ПолучитьОбласть(""Строка"");
	//		ОбластьСтрока.Параметры.НомСтр = СчТов+1;
	//		ОбластьСтрока.Параметры.КодСап = ТекСтрока.КодСап;
	//		ОбластьСтрока.Параметры.НаимТов = ТекСтрока.Номенклатура.НаименованиеПолное;
	//		ОбластьСтрока.Параметры.ЕдИзм = ТекСтрока.Номенклатура.ЕдиницаДляОтчетов.Наименование;
	//		ОбластьСтрока.Параметры.КолВоТов = ТекСтрока.Количество;
	//		ТабДок.Вывести(ОбластьСтрока);
	//	КонецЦикла;
	//	
	//	ОбластьПодвал = ПечатьСодержимого.ПолучитьОбласть(""Подвал"");
	//	ТабДок.Вывести(ОбластьПодвал);
	//	Если Сч<СтруктураПалет.Количество()-1 Тогда
	//		ТабДок.ВывестиГоризонтальныйРазделительСтраниц();	
	//	КонецЕсли;
	КонецЦикла;	
	
	Возврат ТабДок;
КонецФункции

&НаКлиенте
Функция ПолучитьGLNОрганизации(Организация, ИзБД = Истина)
	
	Если ИзБД Тогда
				
		Отбор = ЭДИ_РаботаСБазойДанных.ПолучитьПустуюЗапись();	
		Отбор.Объект = ЗначениеВСтрокуВнутрСервер(Организация);
		Отбор.Тип = ""GLN"";
		Запрос = ЭДИ_РаботаСБазойДанных.ПолучитьСвойство(Отбор);	
		
		Если Запрос.Результат=0 тогда
			
			Сообщить(""Не удалось получить GLN Организации! Документ не выгружен!"");
			Возврат Неопределено;
			
		Иначе
			
			Свойство = Запрос.Содержимое;		
			GLN = Свойство.ИндексированныйАтрибут1;//gln
			Возврат GLN;
			
		КонецЕсли;

		Если Объект.ПолучатьОрганизациюИзНастроек Тогда
			Возврат ПолучитьЗначениеСвойстваОбъектаДФормы(""GLN"", Организация);
		Иначе
			ВОзврат Объект.GLNОрганизацииПОУмолчанию;
		КонецЕсли;
		
	Иначе
		Возврат ПолучитьЗначениеСвойстваОбъекта(""GLN"", Организация);
	КонецЕсли;
	
КонецФункции

Функция ПолучитьЗначениеСвойстваОбъекта(ПСвойство,ВладелецСвойства, ВыводитьПредупреждение=Ложь)
	Запрос = Новый Запрос;
	//Свойство = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию(ПСвойство,Истина);
	//Если НЕ ЗначениеЗаполнено(Свойство) Тогда
	//	Сообщить(""Не найдено свойство "" + ПСвойство);
	//	Возврат """";
	//КонецЕсли;
	Запрос.Текст = ""
	|ВЫБРАТЬ
	|	ЗначенияСвойствОбъектов.Объект,
	|	ЗначенияСвойствОбъектов.Свойство,
	|	ЗначенияСвойствОбъектов.Значение
	|ИЗ
	|	РегистрСведений.ДополнительныеСведения КАК ЗначенияСвойствОбъектов
	|ГДЕ
	|	ЗначенияСвойствОбъектов.Свойство.Наименование = &Свойство
	|	И ЗначенияСвойствОбъектов.Объект = &Объект"";
	Запрос.УстановитьПараметр(""Свойство"",	ПСвойство);
	Попытка
		Запрос.УстановитьПараметр(""Объект"",	ВладелецСвойства.ПолучитьОбъект);
	Исключение
		Запрос.УстановитьПараметр(""Объект"",	ВладелецСвойства);
	КонецПопытки;
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	Если РезультатЗапроса.Следующий() Тогда
		Попытка
			Возврат РезультатЗапроса.Значение.Наименование;
		Исключение
			Возврат РезультатЗапроса.Значение;
		КонецПопытки;
	Иначе
		Попытка	
			Возврат ВладелецСвойства.ДополнительныеРеквизиты.Найти(ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию(ПСвойство),""Свойство"").Значение; 
		Исключение 
		КонецПопытки;
	КОнецЕсли;
	
	Если ВыводитьПредупреждение Тогда
		Сообщить(""Не найдено значение свойства ""+ПСвойство+"" объекта "" + ВладелецСвойства);
	КОнецЕсли;
	
	Возврат Неопределено;
КонецФункции

Функция ПолучитьСписокНаименованийСвойств(Документ)
	ДокументОбъект = Документ.ПолучитьОбъект();
	КонтрагентСсылка = ДокументОбъект.Грузополучатель;
	ДопРеквизиты = КонтрагентСсылка.Партнер.ДополнительныеРеквизиты.ВыгрузитьКолонку(""Свойство"");
	СвойствоНомерМагазина = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию(""Номер магазина"");
	ПоискНомерМагазина = ДопРеквизиты.Найти(СвойствоНомерМагазина, ""Свойство"");
	МассивСвойств = Новый Массив;
	Для Каждого ДопРеквизит Из ДопРеквизиты ЦИкл
		МассивСвойств.Добавить(ДопРеквизит.Заголовок);
	КонецЦикла;
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить(""КОличествоСтрок"", КонтрагентСсылка.ДополнительныеРеквизиты.Количество());
	СтруктураВозврата.Вставить(""МассивСвойств"", МассивСвойств);
	СтруктураВозврата.Вставить(""Контрагент"", КонтрагентСсылка);
	Возврат СтруктураВозврата;
КонецФункции

Функция ПолучитьНомерМагазинаКонтрагента(Документ)
	ДокументОбъект = Документ.ПолучитьОбъект();
	КонтрагентСсылка = ДокументОбъект.Грузополучатель;
	Если КОнтрагентСсылка.Пустая() Тогда
		КонтрагентСсылка = ДокументОбъект.Контрагент;
	КонецЕсли;
	ДопРеквизиты = УправлениеСвойствами.ПолучитьЗначенияСвойств(КонтрагентСсылка.Партнер, Истина, Ложь);//ДопРеквизиты = КонтрагентСсылка.Партнер.ДополнительныеРеквизиты.ВыгрузитьКолонку(""Свойство"");
	СвойствоНомерМагазина = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию(""Номер магазина"");
	ПоискНомерМагазина = ДопРеквизиты.Найти(СвойствоНомерМагазина, ""Свойство"");
	НомерМагазина = """";
	Если ПоискНомерМагазина <> Неопределено Тогда
		НомерМагазина = СокрЛП(ПоискНомерМагазина.Значение);
	КонецЕсли;	
	Возврат НомерМагазина;
КонецФункции

&НаСервере
Функция ПолучитьСписокНоменклатуры()
	СЗ = Новый СписокЗначений;
	Для каждого Стр Из Объект.ИсправляемыйДокументRECADV.Товары Цикл
		СЗ.Добавить(Стр.Номенклатура);
	КонецЦикла;		
	Возврат СЗ;
КонецФункции

//++ззз                   
&НаКлиенте
Процедура ТаблицаSSCCНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
   	СтандартнаяОбработка=Ложь;
	СписокНоменклатурыИзДокумента = ПолучитьСписокНоменклатуры();
	МассивНоменклатурИзДокумена = СписокНоменклатурыИзДокумента.ВыгрузитьЗначения();
	ЭтаФорма.Элементы.ТаблицаSSCCНоменклатура.СписокВыбора.ЗагрузитьЗначения(МассивНоменклатурИзДокумена);
	//ФормаВыбора = ПолучитьФорму(""Справочник.Номенклатура.ФормаВыбора"",,Элемент);
	//ЭлементОтбора = ФормаВыбора.Список.Отбор.Элементы.Добавить(Тип(""ЭлементОтбораКомпоновкиДанных""));
	//ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(""Ссылка"");
	//ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	//ЭлементОтбора.ПравоеЗначение = СписокНоменклатурыИзДокумента;
	//ЭлементОтбора.Использование = Истина;
	//ФормаВыбора.ОткрытьМодально();
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаSSCCКоличествоНаПалетеПриИзменении(Элемент)
	ОчиститьСообщения();
	ПолучитьКоличестваНаФорме();
КонецПроцедуры

Процедура ПолучитьКоличестваНаФорме()	
	ДокументОбъект = Объект.ИсправляемыйДокументRECADV;
	
	ТЧСв = ДокументОбъект.Товары.Выгрузить();
	ТЧСв.Свернуть(""Номенклатура"", ""Количество"");	
	
	ТЗ = РеквизитФормыВЗначение(""ТаблицаSSCC"");
	ТЗ.Свернуть(""Номенклатура"", ""КоличествоНаПалете"");
	Для каждого Строка Из ТЧСв Цикл
		Стр = ТЗ.Найти(Строка.Номенклатура);
		Если Стр <> Неопределено Тогда
			Сообщить(Строка(Строка.Номенклатура) + "": "" + Строка(Стр.КоличествоНаПалете) + "" из "" + Строка(Строка.Количество) + "". Осталось распределить: "" + Строка(Строка.Количество - Стр.КоличествоНаПалете));
		Иначе
			Сообщить(Строка(Строка.Номенклатура) + "": 0 из "" + Строка(Строка.Количество) + "". Осталось распределить: "" + Строка(Строка.Количество));
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьКоличество(Команда)
	ОчиститьСообщения();
	ПолучитьКоличестваНаФорме();
КонецПроцедуры
//--
",
{4,5,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",5eae546d-c51c-4628-bddd-0ed3076be414}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},
{9,
{2},0,"Документ",
{1,1,
{"ru","Документ"}
},
{"Pattern",
{"#",b66fce8c-a030-4906-89c6-db40d78acdd7}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{3},0,"ТаблицаSSCC",
{1,1,
{"ru","Таблица SSCC"}
},
{"Pattern",
{"#",acf6192e-81ca-46ef-93a6-5a6968b78663}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,3,
{5,1,0,"КодSSCC",
{1,1,
{"ru","Код SSCC"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,2,0,"Номенклатура",
{1,1,
{"ru","Номенклатура"}
},
{"Pattern",
{"#",e18d5670-dd2f-4528-8897-d3f07ca77f21}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,3,0,"КоличествоНаПалете",
{1,1,
{"ru","Количество на палете"}
},
{"Pattern",
{"N",10,0,0}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{0,0},
{0,0}
},
{9,
{4},0,"Реквизит1",
{1,0},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{5},0,"ВсегоПаллет",
{1,1,
{"ru","Всего паллет"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},1,
{0,
{2,
{1},
{0,d63634e3-5bf8-4ded-a3e5-356361b83d27}
},3,
{5,1,0,"МестоПОиска",
{1,1,
{"ru","Место п оиска"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,2,0,"ТегДляПоиска",
{1,1,
{"ru","Тег для поиска"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,3,0,"ПолеДляПОиска",
{1,1,
{"ru","Поле для п оиска"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0}
},0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,0},
{0,7,
{8,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ДобавитьСтроку",
{1,1,
{"ru","Добавить строку"}
},
{1,1,
{"ru","Добавить строку"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ДобавитьСтроку",3,0,0,
{0,0},1,0,1,0,0},
{8,
{2,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"УдалитьСтроку",
{1,1,
{"ru","Удалить строку"}
},
{1,1,
{"ru","Удалить строку"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"УдалитьСтроку",3,0,0,
{0,0},1,0,1,0,0},
{8,
{3,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ВыгрузитьДокумент",
{1,1,
{"ru","Выгрузить документ"}
},
{1,1,
{"ru","Выгрузить документ"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ВыгрузитьДокумент",3,0,0,
{0,0},1,0,1,0,0},
{8,
{4,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ЗакрытьФорму",
{1,1,
{"ru","Закрыть"}
},
{1,1,
{"ru","Закрыть форму"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ЗакрытьФорму",3,0,0,
{0,0},1,0,1,0,0},
{8,
{5,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ОчиститьТаблицу",
{1,1,
{"ru","Очистить таблицу"}
},
{1,1,
{"ru","Очистить таблицу"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,1,
{-2},"",-1,-1,1,0,""},"ОчиститьТаблицу",3,0,0,
{0,0},1,0,1,0,0},
{8,
{6,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"РаспределитьТоварыПоПаллетам",
{1,1,
{"ru","Распределить товары по паллетам"}
},
{1,1,
{"ru","Распределить товары по паллетам"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"РаспределитьТоварыПоПаллетам",3,0,0,
{0,0},1,0,1,0,0},
{8,
{7,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ПечатьSSCC",
{1,1,
{"ru","Печать SSCC"}
},
{1,1,
{"ru","Печать SSCC"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ПечатьSSCC",3,0,0,
{0,0},1,0,1,0,0}
},
{0,0},
{0,0},0,0}